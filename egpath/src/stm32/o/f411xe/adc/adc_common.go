// Peripheral: ADC_Common_Periph  Analog to Digital Converter.
// Instances:
//  ADC1_COMMON  mmap.ADC1_COMMON_BASE
// Registers:
//  0x00 32  CSR ADC Common status register.
//  0x04 32  CCR ADC common control register.
//  0x08 32  CDR ADC common regular data register for dual.
// Import:
//  stm32/o/f411xe/mmap
package adc

// DO NOT EDIT THIS FILE. GENERATED BY stm32xgen.

const (
	AWD1   CSR = 0x01 << 0 //+ ADC1 Analog watchdog flag.
	EOC1   CSR = 0x01 << 1 //+ ADC1 End of conversion.
	JEOC1  CSR = 0x01 << 2 //+ ADC1 Injected channel end of conversion.
	JSTRT1 CSR = 0x01 << 3 //+ ADC1 Injected channel Start flag.
	STRT1  CSR = 0x01 << 4 //+ ADC1 Regular channel Start flag.
	OVR1   CSR = 0x01 << 5 //+ ADC1 DMA overrun  flag.
)

const (
	AWD1n   = 0
	EOC1n   = 1
	JEOC1n  = 2
	JSTRT1n = 3
	STRT1n  = 4
	OVR1n   = 5
)

const (
	MULTI   CCR = 0x1F << 0  //+ MULTI[4:0] bits (Multi-ADC mode selection).
	DELAY   CCR = 0x0F << 8  //+ DELAY[3:0] bits (Delay between 2 sampling phases).
	DDS     CCR = 0x01 << 13 //+ DMA disable selection (Multi-ADC mode).
	DMA     CCR = 0x03 << 14 //+ DMA[1:0] bits (Direct Memory Access mode for multimode).
	ADCPRE  CCR = 0x03 << 16 //+ ADCPRE[1:0] bits (ADC prescaler).
	VBATE   CCR = 0x01 << 22 //+ VBAT Enable.
	TSVREFE CCR = 0x01 << 23 //+ Temperature Sensor and VREFINT Enable.
)

const (
	MULTIn   = 0
	DELAYn   = 8
	DDSn     = 13
	DMAn     = 14
	ADCPREn  = 16
	VBATEn   = 22
	TSVREFEn = 23
)

const (
	DATA1 CDR = 0xFFFF << 0  //+ 1st data of a pair of regular conversions.
	DATA2 CDR = 0xFFFF << 16 //+ 2nd data of a pair of regular conversions.
)

const (
	DATA1n = 0
	DATA2n = 16
)
