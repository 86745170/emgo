// Peripheral: SPDIFRX_Periph  SPDIF-RX Interface.
// Instances:
//  SPDIFRX  mmap.SPDIFRX_BASE
// Registers:
//  0x00 32  CR   Control register.
//  0x04 32  IMR  Interrupt mask register.
//  0x08 32  SR   Status register.
//  0x0C 32  IFCR Interrupt Flag Clear register.
//  0x10 32  DR   Data input register.
//  0x14 32  CSR  Channel Status register.
//  0x18 32  DIR  Debug Information register.
// Import:
//  stm32/o/f746xx/mmap
package spdifrx

// DO NOT EDIT THIS FILE. GENERATED BY stm32xgen.

const (
	SPDIFEN CR = 0x03 << 0  //+ Peripheral Block Enable.
	RXDMAEN CR = 0x01 << 2  //+ Receiver DMA Enable for data flow.
	RXSTEO  CR = 0x01 << 3  //+ Stereo Mode.
	DRFMT   CR = 0x03 << 4  //+ RX Data format.
	PMSK    CR = 0x01 << 6  //+ Mask Parity error bit.
	VMSK    CR = 0x01 << 7  //+ Mask of Validity bit.
	CUMSK   CR = 0x01 << 8  //+ Mask of channel status and user bits.
	PTMSK   CR = 0x01 << 9  //+ Mask of Preamble Type bits.
	CBDMAEN CR = 0x01 << 10 //+ Control Buffer DMA ENable for control flow.
	CHSEL   CR = 0x01 << 11 //+ Channel Selection.
	NBTR    CR = 0x03 << 12 //+ Maximum allowed re-tries during synchronization phase.
	WFA     CR = 0x01 << 14 //+ Wait For Activity.
	INSEL   CR = 0x07 << 16 //+ SPDIF input selection.
)

const (
	SPDIFENn = 0
	RXDMAENn = 2
	RXSTEOn  = 3
	DRFMTn   = 4
	PMSKn    = 6
	VMSKn    = 7
	CUMSKn   = 8
	PTMSKn   = 9
	CBDMAENn = 10
	CHSELn   = 11
	NBTRn    = 12
	WFAn     = 14
	INSELn   = 16
)

const (
	RXNEIE  IMR = 0x01 << 0 //+ RXNE interrupt enable.
	CSRNEIE IMR = 0x01 << 1 //+ Control Buffer Ready Interrupt Enable.
	PERRIE  IMR = 0x01 << 2 //+ Parity error interrupt enable.
	OVRIE   IMR = 0x01 << 3 //+ Overrun error Interrupt Enable.
	SBLKIE  IMR = 0x01 << 4 //+ Synchronization Block Detected Interrupt Enable.
	SYNCDIE IMR = 0x01 << 5 //+ Synchronization Done.
	IFEIE   IMR = 0x01 << 6 //+ Serial Interface Error Interrupt Enable.
)

const (
	RXNEIEn  = 0
	CSRNEIEn = 1
	PERRIEn  = 2
	OVRIEn   = 3
	SBLKIEn  = 4
	SYNCDIEn = 5
	IFEIEn   = 6
)

const (
	RXNE   SR = 0x01 << 0    //+ Read data register not empty.
	CSRNE  SR = 0x01 << 1    //+ The Control Buffer register is not empty.
	PERR   SR = 0x01 << 2    //+ Parity error.
	OVR    SR = 0x01 << 3    //+ Overrun error.
	SBD    SR = 0x01 << 4    //+ Synchronization Block Detected.
	SYNCD  SR = 0x01 << 5    //+ Synchronization Done.
	FERR   SR = 0x01 << 6    //+ Framing error.
	SERR   SR = 0x01 << 7    //+ Synchronization error.
	TERR   SR = 0x01 << 8    //+ Time-out error.
	WIDTH5 SR = 0x7FFF << 16 //+ Duration of 5 symbols counted with spdif_clk.
)

const (
	RXNEn   = 0
	CSRNEn  = 1
	PERRn   = 2
	OVRn    = 3
	SBDn    = 4
	SYNCDn  = 5
	FERRn   = 6
	SERRn   = 7
	TERRn   = 8
	WIDTH5n = 16
)

const (
	PERRCF  IFCR = 0x01 << 2 //+ Clears the Parity error flag.
	OVRCF   IFCR = 0x01 << 3 //+ Clears the Overrun error flag.
	SBDCF   IFCR = 0x01 << 4 //+ Clears the Synchronization Block Detected flag.
	SYNCDCF IFCR = 0x01 << 5 //+ Clears the Synchronization Done flag.
)

const (
	PERRCFn  = 2
	OVRCFn   = 3
	SBDCFn   = 4
	SYNCDCFn = 5
)

const (
	DR    DR = 0xFFFFFF << 8 //+ Data value.
	PT    DR = 0x03 << 4     //+ Preamble Type.
	C     DR = 0x01 << 3     //+ Channel Status bit.
	U     DR = 0x01 << 2     //+ User bit.
	V     DR = 0x01 << 1     //+ Validity bit.
	PE    DR = 0x01 << 0     //+ Parity Error bit.
	DRNL1 DR = 0xFFFF00 << 8 //  Data value Channel B.
	DRNL2 DR = 0xFFFF << 0   //  Data value Channel A.
)

const (
	DRn = 8
	PTn = 4
	Cn  = 3
	Un  = 2
	Vn  = 1
	PEn = 0
)

const (
	USR CSR = 0xFFFF << 0 //+ User data information.
	CS  CSR = 0xFF << 16  //+ Channel A status information.
	SOB CSR = 0x01 << 24  //+ Start Of Block.
)

const (
	USRn = 0
	CSn  = 16
	SOBn = 24
)

const (
	THI DIR = 0x13FF << 0  //+ Threshold LOW.
	TLO DIR = 0x1FFF << 16 //+ Threshold HIGH.
)

const (
	THIn = 0
	TLOn = 16
)
