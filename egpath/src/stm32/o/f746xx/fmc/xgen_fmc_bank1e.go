package fmc

// DO NOT EDIT THIS FILE. GENERATED BY xgen.

import (
	"mmio"
	"unsafe"

	"stm32/o/f746xx/mmap"
)

type FMC_Bank1E_Periph struct {
	BWTR [7]BWTR
}

func (p *FMC_Bank1E_Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

var FMC_Bank1E = (*FMC_Bank1E_Periph)(unsafe.Pointer(uintptr(mmap.FMC_Bank1E_R_BASE)))

type BWTR_Bits uint32

type BWTR struct{ mmio.U32 }

func (r *BWTR) Bits(mask BWTR_Bits) BWTR_Bits { return BWTR_Bits(r.U32.Bits(uint32(mask))) }
func (r *BWTR) StoreBits(mask, b BWTR_Bits)   { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *BWTR) SetBits(mask BWTR_Bits)        { r.U32.SetBits(uint32(mask)) }
func (r *BWTR) ClearBits(mask BWTR_Bits)      { r.U32.ClearBits(uint32(mask)) }
func (r *BWTR) Load() BWTR_Bits               { return BWTR_Bits(r.U32.Load()) }
func (r *BWTR) Store(b BWTR_Bits)             { r.U32.Store(uint32(b)) }

type BWTR_Mask struct{ mmio.UM32 }

func (rm BWTR_Mask) Load() BWTR_Bits   { return BWTR_Bits(rm.UM32.Load()) }
func (rm BWTR_Mask) Store(b BWTR_Bits) { rm.UM32.Store(uint32(b)) }
