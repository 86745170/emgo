// +build l1xx_md

// Peripheral: COMP_Periph  Comparator.
// Instances:
//  COMP  mmap.COMP_BASE
// Registers:
//  0x00 32  CSR Comparator control and status register.
// Import:
//  stm32/o/l1xx_md/mmap
package comp

// DO NOT EDIT THIS FILE. GENERATED BY stm32xgen.

const (
	V10KPU    CSR = 0x01 << 0  //+ 10K pull-up resistor.
	V400KPU   CSR = 0x01 << 1  //+ 400K pull-up resistor.
	V10KPD    CSR = 0x01 << 2  //+ 10K pull-down resistor.
	V400KPD   CSR = 0x01 << 3  //+ 400K pull-down resistor.
	CMP1EN    CSR = 0x01 << 4  //+ Comparator 1 enable.
	SW1       CSR = 0x01 << 5  //+ SW1 analog switch enable.
	CMP1OUT   CSR = 0x01 << 7  //+ Comparator 1 output.
	SPEED     CSR = 0x01 << 12 //+ Comparator 2 speed.
	CMP2OUT   CSR = 0x01 << 13 //+ Comparator 2 ouput.
	VREFOUTEN CSR = 0x01 << 16 //+ Comparator Vref Enable.
	WNDWE     CSR = 0x01 << 17 //+ Window mode enable.
	INSEL     CSR = 0x07 << 18 //+ INSEL[2:0] Inversion input Selection.
	INSEL_0   CSR = 0x01 << 18 //  Bit 0.
	INSEL_1   CSR = 0x02 << 18 //  Bit 1.
	INSEL_2   CSR = 0x04 << 18 //  Bit 2.
	OUTSEL    CSR = 0x07 << 21 //+ OUTSEL[2:0] comparator 2 output redirection.
	OUTSEL_0  CSR = 0x01 << 21 //  Bit 0.
	OUTSEL_1  CSR = 0x02 << 21 //  Bit 1.
	OUTSEL_2  CSR = 0x04 << 21 //  Bit 2.
	FCH3      CSR = 0x01 << 26 //+ Bit 26.
	FCH8      CSR = 0x01 << 27 //+ Bit 27.
	RCH13     CSR = 0x01 << 28 //+ Bit 28.
	CAIE      CSR = 0x01 << 29 //+ Bit 29.
	CAIF      CSR = 0x01 << 30 //+ Bit 30.
	TSUSP     CSR = 0x01 << 31 //+ Bit 31.
)

const (
	V10KPUn    = 0
	V400KPUn   = 1
	V10KPDn    = 2
	V400KPDn   = 3
	CMP1ENn    = 4
	SW1n       = 5
	CMP1OUTn   = 7
	SPEEDn     = 12
	CMP2OUTn   = 13
	VREFOUTENn = 16
	WNDWEn     = 17
	INSELn     = 18
	OUTSELn    = 21
	FCH3n      = 26
	FCH8n      = 27
	RCH13n     = 28
	CAIEn      = 29
	CAIFn      = 30
	TSUSPn     = 31
)
