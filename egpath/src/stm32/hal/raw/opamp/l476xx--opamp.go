// +build l476xx

// Peripheral: OPAMP_Periph  Operational Amplifier (OPAMP).
// Instances:
//  OPAMP   mmap.OPAMP_BASE
//  OPAMP1  mmap.OPAMP1_BASE
//  OPAMP2  mmap.OPAMP2_BASE
// Registers:
//  0x00 32  CSR   Control/status register.
//  0x04 32  OTR   Offset trimming register for normal mode.
//  0x08 32  LPOTR Offset trimming register for low power mode.
// Import:
//  stm32/o/l476xx/mmap
package opamp

// DO NOT EDIT THIS FILE. GENERATED BY stm32xgen.

const (
	OPAMPxEN CSR_Bits = 0x01 << 0  //+ OPAMP enable.
	OPALPM   CSR_Bits = 0x01 << 1  //+ Operational amplifier Low Power Mode.
	OPAMODE  CSR_Bits = 0x03 << 2  //+ Operational amplifier PGA mode.
	PGGAIN   CSR_Bits = 0x03 << 4  //+ Operational amplifier Programmable amplifier gain value.
	VMSEL    CSR_Bits = 0x03 << 8  //+ Inverting input selection.
	VPSEL    CSR_Bits = 0x01 << 10 //+ Non inverted input selection.
	CALON    CSR_Bits = 0x01 << 12 //+ Calibration mode enable.
	CALSEL   CSR_Bits = 0x01 << 13 //+ Calibration selection.
	USERTRIM CSR_Bits = 0x01 << 14 //+ User trimming enable.
	CALOUT   CSR_Bits = 0x01 << 15 //+ Operational amplifier1 calibration output.
)

const (
	OPAMPxENn = 0
	OPALPMn   = 1
	OPAMODEn  = 2
	PGGAINn   = 4
	VMSELn    = 8
	VPSELn    = 10
	CALONn    = 12
	CALSELn   = 13
	USERTRIMn = 14
	CALOUTn   = 15
)

const (
	TRIMOFFSETN OTR_Bits = 0x1F << 0 //+ Trim for NMOS differential pairs.
	TRIMOFFSETP OTR_Bits = 0x1F << 8 //+ Trim for PMOS differential pairs.
)

const (
	TRIMOFFSETNn = 0
	TRIMOFFSETPn = 8
)

const (
	TRIMLPOFFSETN LPOTR_Bits = 0x1F << 0 //+ Trim for NMOS differential pairs.
	TRIMLPOFFSETP LPOTR_Bits = 0x1F << 8 //+ Trim for PMOS differential pairs.
)

const (
	TRIMLPOFFSETNn = 0
	TRIMLPOFFSETPn = 8
)
