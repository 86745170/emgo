// +build f411xe

package eth

// DO NOT EDIT THIS FILE. GENERATED BY xgen.

import (
	"bits"
	"mmio"
	"unsafe"

	"stm32/o/f411xe/mmap"
)

type ETH_Periph struct {
	MACCR       MACCR
	MACFFR      MACFFR
	MACHTHR     MACHTHR
	MACHTLR     MACHTLR
	MACMIIAR    MACMIIAR
	MACMIIDR    MACMIIDR
	MACFCR      MACFCR
	MACVLANTR   MACVLANTR
	_           [2]uint32
	MACRWUFFR   MACRWUFFR
	MACPMTCSR   MACPMTCSR
	_           [2]uint32
	MACSR       MACSR
	MACIMR      MACIMR
	MACA0HR     MACA0HR
	MACA0LR     MACA0LR
	MACA1HR     MACA1HR
	MACA1LR     MACA1LR
	MACA2HR     MACA2HR
	MACA2LR     MACA2LR
	MACA3HR     MACA3HR
	MACA3LR     MACA3LR
	_           [40]uint32
	MMCCR       MMCCR
	MMCRIR      MMCRIR
	MMCTIR      MMCTIR
	MMCRIMR     MMCRIMR
	MMCTIMR     MMCTIMR
	_           [14]uint32
	MMCTGFSCCR  MMCTGFSCCR
	MMCTGFMSCCR MMCTGFMSCCR
	_           [5]uint32
	MMCTGFCR    MMCTGFCR
	_           [10]uint32
	MMCRFCECR   MMCRFCECR
	MMCRFAECR   MMCRFAECR
	_           [10]uint32
	MMCRGUFCR   MMCRGUFCR
	_           [334]uint32
	PTPTSCR     PTPTSCR
	PTPSSIR     PTPSSIR
	PTPTSHR     PTPTSHR
	PTPTSLR     PTPTSLR
	PTPTSHUR    PTPTSHUR
	PTPTSLUR    PTPTSLUR
	PTPTSAR     PTPTSAR
	PTPTTHR     PTPTTHR
	PTPTTLR     PTPTTLR
	RESERVED8   RESERVED8
	PTPTSSR     PTPTSSR
	_           [565]uint32
	DMABMR      DMABMR
	DMATPDR     DMATPDR
	DMARPDR     DMARPDR
	DMARDLAR    DMARDLAR
	DMATDLAR    DMATDLAR
	DMASR       DMASR
	DMAOMR      DMAOMR
	DMAIER      DMAIER
	DMAMFBOCR   DMAMFBOCR
	DMARSWTR    DMARSWTR
	_           [8]uint32
	DMACHTDR    DMACHTDR
	DMACHRDR    DMACHRDR
	DMACHTBAR   DMACHTBAR
	DMACHRBAR   DMACHRBAR
}

var ETH = (*ETH_Periph)(unsafe.Pointer(uintptr(mmap.ETH_BASE)))

type MACCR_Bits uint32

func (b MACCR_Bits) Field(mask MACCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACCR_Bits) J(v int) MACCR_Bits {
	return MACCR_Bits(bits.Make32(v, uint32(mask)))
}

type MACCR struct{ mmio.U32 }

func (r *MACCR) Bits(mask MACCR_Bits) MACCR_Bits { return MACCR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACCR) StoreBits(mask, b MACCR_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACCR) SetBits(mask MACCR_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *MACCR) ClearBits(mask MACCR_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *MACCR) Load() MACCR_Bits                { return MACCR_Bits(r.U32.Load()) }
func (r *MACCR) Store(b MACCR_Bits)              { r.U32.Store(uint32(b)) }

type MACCR_Mask struct{ mmio.UM32 }

func (rm MACCR_Mask) Load() MACCR_Bits   { return MACCR_Bits(rm.UM32.Load()) }
func (rm MACCR_Mask) Store(b MACCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) WD() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(WD)}}
}

func (p *ETH_Periph) JD() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(JD)}}
}

func (p *ETH_Periph) IFG() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(IFG)}}
}

func (p *ETH_Periph) CSD() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(CSD)}}
}

func (p *ETH_Periph) FES() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(FES)}}
}

func (p *ETH_Periph) ROD() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(ROD)}}
}

func (p *ETH_Periph) LM() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(LM)}}
}

func (p *ETH_Periph) DM() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(DM)}}
}

func (p *ETH_Periph) IPCO() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(IPCO)}}
}

func (p *ETH_Periph) RD() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(RD)}}
}

func (p *ETH_Periph) APCS() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(APCS)}}
}

func (p *ETH_Periph) BL() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(BL)}}
}

func (p *ETH_Periph) DC() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(DC)}}
}

func (p *ETH_Periph) TE() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(TE)}}
}

func (p *ETH_Periph) RE() MACCR_Mask {
	return MACCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 0)), uint32(RE)}}
}

type MACFFR_Bits uint32

func (b MACFFR_Bits) Field(mask MACFFR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACFFR_Bits) J(v int) MACFFR_Bits {
	return MACFFR_Bits(bits.Make32(v, uint32(mask)))
}

type MACFFR struct{ mmio.U32 }

func (r *MACFFR) Bits(mask MACFFR_Bits) MACFFR_Bits { return MACFFR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACFFR) StoreBits(mask, b MACFFR_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACFFR) SetBits(mask MACFFR_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *MACFFR) ClearBits(mask MACFFR_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *MACFFR) Load() MACFFR_Bits                 { return MACFFR_Bits(r.U32.Load()) }
func (r *MACFFR) Store(b MACFFR_Bits)               { r.U32.Store(uint32(b)) }

type MACFFR_Mask struct{ mmio.UM32 }

func (rm MACFFR_Mask) Load() MACFFR_Bits   { return MACFFR_Bits(rm.UM32.Load()) }
func (rm MACFFR_Mask) Store(b MACFFR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) RA() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(RA)}}
}

func (p *ETH_Periph) HPF() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(HPF)}}
}

func (p *ETH_Periph) SAF() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(SAF)}}
}

func (p *ETH_Periph) SAIF() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(SAIF)}}
}

func (p *ETH_Periph) PCF() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(PCF)}}
}

func (p *ETH_Periph) BFD() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(BFD)}}
}

func (p *ETH_Periph) PAM() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(PAM)}}
}

func (p *ETH_Periph) DAIF() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(DAIF)}}
}

func (p *ETH_Periph) HM() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(HM)}}
}

func (p *ETH_Periph) HU() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(HU)}}
}

func (p *ETH_Periph) PM() MACFFR_Mask {
	return MACFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4)), uint32(PM)}}
}

type MACHTHR_Bits uint32

func (b MACHTHR_Bits) Field(mask MACHTHR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACHTHR_Bits) J(v int) MACHTHR_Bits {
	return MACHTHR_Bits(bits.Make32(v, uint32(mask)))
}

type MACHTHR struct{ mmio.U32 }

func (r *MACHTHR) Bits(mask MACHTHR_Bits) MACHTHR_Bits { return MACHTHR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACHTHR) StoreBits(mask, b MACHTHR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACHTHR) SetBits(mask MACHTHR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACHTHR) ClearBits(mask MACHTHR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACHTHR) Load() MACHTHR_Bits                  { return MACHTHR_Bits(r.U32.Load()) }
func (r *MACHTHR) Store(b MACHTHR_Bits)                { r.U32.Store(uint32(b)) }

type MACHTHR_Mask struct{ mmio.UM32 }

func (rm MACHTHR_Mask) Load() MACHTHR_Bits   { return MACHTHR_Bits(rm.UM32.Load()) }
func (rm MACHTHR_Mask) Store(b MACHTHR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) HTH() MACHTHR_Mask {
	return MACHTHR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 8)), uint32(HTH)}}
}

type MACHTLR_Bits uint32

func (b MACHTLR_Bits) Field(mask MACHTLR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACHTLR_Bits) J(v int) MACHTLR_Bits {
	return MACHTLR_Bits(bits.Make32(v, uint32(mask)))
}

type MACHTLR struct{ mmio.U32 }

func (r *MACHTLR) Bits(mask MACHTLR_Bits) MACHTLR_Bits { return MACHTLR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACHTLR) StoreBits(mask, b MACHTLR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACHTLR) SetBits(mask MACHTLR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACHTLR) ClearBits(mask MACHTLR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACHTLR) Load() MACHTLR_Bits                  { return MACHTLR_Bits(r.U32.Load()) }
func (r *MACHTLR) Store(b MACHTLR_Bits)                { r.U32.Store(uint32(b)) }

type MACHTLR_Mask struct{ mmio.UM32 }

func (rm MACHTLR_Mask) Load() MACHTLR_Bits   { return MACHTLR_Bits(rm.UM32.Load()) }
func (rm MACHTLR_Mask) Store(b MACHTLR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) HTL() MACHTLR_Mask {
	return MACHTLR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 12)), uint32(HTL)}}
}

type MACMIIAR_Bits uint32

func (b MACMIIAR_Bits) Field(mask MACMIIAR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACMIIAR_Bits) J(v int) MACMIIAR_Bits {
	return MACMIIAR_Bits(bits.Make32(v, uint32(mask)))
}

type MACMIIAR struct{ mmio.U32 }

func (r *MACMIIAR) Bits(mask MACMIIAR_Bits) MACMIIAR_Bits {
	return MACMIIAR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MACMIIAR) StoreBits(mask, b MACMIIAR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACMIIAR) SetBits(mask MACMIIAR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MACMIIAR) ClearBits(mask MACMIIAR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MACMIIAR) Load() MACMIIAR_Bits             { return MACMIIAR_Bits(r.U32.Load()) }
func (r *MACMIIAR) Store(b MACMIIAR_Bits)           { r.U32.Store(uint32(b)) }

type MACMIIAR_Mask struct{ mmio.UM32 }

func (rm MACMIIAR_Mask) Load() MACMIIAR_Bits   { return MACMIIAR_Bits(rm.UM32.Load()) }
func (rm MACMIIAR_Mask) Store(b MACMIIAR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) PA() MACMIIAR_Mask {
	return MACMIIAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 16)), uint32(PA)}}
}

func (p *ETH_Periph) MR() MACMIIAR_Mask {
	return MACMIIAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 16)), uint32(MR)}}
}

func (p *ETH_Periph) CR() MACMIIAR_Mask {
	return MACMIIAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 16)), uint32(CR)}}
}

func (p *ETH_Periph) MW() MACMIIAR_Mask {
	return MACMIIAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 16)), uint32(MW)}}
}

func (p *ETH_Periph) MB() MACMIIAR_Mask {
	return MACMIIAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 16)), uint32(MB)}}
}

type MACMIIDR_Bits uint32

func (b MACMIIDR_Bits) Field(mask MACMIIDR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACMIIDR_Bits) J(v int) MACMIIDR_Bits {
	return MACMIIDR_Bits(bits.Make32(v, uint32(mask)))
}

type MACMIIDR struct{ mmio.U32 }

func (r *MACMIIDR) Bits(mask MACMIIDR_Bits) MACMIIDR_Bits {
	return MACMIIDR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MACMIIDR) StoreBits(mask, b MACMIIDR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACMIIDR) SetBits(mask MACMIIDR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MACMIIDR) ClearBits(mask MACMIIDR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MACMIIDR) Load() MACMIIDR_Bits             { return MACMIIDR_Bits(r.U32.Load()) }
func (r *MACMIIDR) Store(b MACMIIDR_Bits)           { r.U32.Store(uint32(b)) }

type MACMIIDR_Mask struct{ mmio.UM32 }

func (rm MACMIIDR_Mask) Load() MACMIIDR_Bits   { return MACMIIDR_Bits(rm.UM32.Load()) }
func (rm MACMIIDR_Mask) Store(b MACMIIDR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) MD() MACMIIDR_Mask {
	return MACMIIDR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 20)), uint32(MD)}}
}

type MACFCR_Bits uint32

func (b MACFCR_Bits) Field(mask MACFCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACFCR_Bits) J(v int) MACFCR_Bits {
	return MACFCR_Bits(bits.Make32(v, uint32(mask)))
}

type MACFCR struct{ mmio.U32 }

func (r *MACFCR) Bits(mask MACFCR_Bits) MACFCR_Bits { return MACFCR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACFCR) StoreBits(mask, b MACFCR_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACFCR) SetBits(mask MACFCR_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *MACFCR) ClearBits(mask MACFCR_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *MACFCR) Load() MACFCR_Bits                 { return MACFCR_Bits(r.U32.Load()) }
func (r *MACFCR) Store(b MACFCR_Bits)               { r.U32.Store(uint32(b)) }

type MACFCR_Mask struct{ mmio.UM32 }

func (rm MACFCR_Mask) Load() MACFCR_Bits   { return MACFCR_Bits(rm.UM32.Load()) }
func (rm MACFCR_Mask) Store(b MACFCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) PT() MACFCR_Mask {
	return MACFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 24)), uint32(PT)}}
}

func (p *ETH_Periph) ZQPD() MACFCR_Mask {
	return MACFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 24)), uint32(ZQPD)}}
}

func (p *ETH_Periph) PLT() MACFCR_Mask {
	return MACFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 24)), uint32(PLT)}}
}

func (p *ETH_Periph) UPFD() MACFCR_Mask {
	return MACFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 24)), uint32(UPFD)}}
}

func (p *ETH_Periph) RFCE() MACFCR_Mask {
	return MACFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 24)), uint32(RFCE)}}
}

func (p *ETH_Periph) TFCE() MACFCR_Mask {
	return MACFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 24)), uint32(TFCE)}}
}

func (p *ETH_Periph) FCBBPA() MACFCR_Mask {
	return MACFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 24)), uint32(FCBBPA)}}
}

type MACVLANTR_Bits uint32

func (b MACVLANTR_Bits) Field(mask MACVLANTR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACVLANTR_Bits) J(v int) MACVLANTR_Bits {
	return MACVLANTR_Bits(bits.Make32(v, uint32(mask)))
}

type MACVLANTR struct{ mmio.U32 }

func (r *MACVLANTR) Bits(mask MACVLANTR_Bits) MACVLANTR_Bits {
	return MACVLANTR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MACVLANTR) StoreBits(mask, b MACVLANTR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACVLANTR) SetBits(mask MACVLANTR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MACVLANTR) ClearBits(mask MACVLANTR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MACVLANTR) Load() MACVLANTR_Bits             { return MACVLANTR_Bits(r.U32.Load()) }
func (r *MACVLANTR) Store(b MACVLANTR_Bits)           { r.U32.Store(uint32(b)) }

type MACVLANTR_Mask struct{ mmio.UM32 }

func (rm MACVLANTR_Mask) Load() MACVLANTR_Bits   { return MACVLANTR_Bits(rm.UM32.Load()) }
func (rm MACVLANTR_Mask) Store(b MACVLANTR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) VLANTC() MACVLANTR_Mask {
	return MACVLANTR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 28)), uint32(VLANTC)}}
}

func (p *ETH_Periph) VLANTI() MACVLANTR_Mask {
	return MACVLANTR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 28)), uint32(VLANTI)}}
}

type MACRWUFFR_Bits uint32

func (b MACRWUFFR_Bits) Field(mask MACRWUFFR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACRWUFFR_Bits) J(v int) MACRWUFFR_Bits {
	return MACRWUFFR_Bits(bits.Make32(v, uint32(mask)))
}

type MACRWUFFR struct{ mmio.U32 }

func (r *MACRWUFFR) Bits(mask MACRWUFFR_Bits) MACRWUFFR_Bits {
	return MACRWUFFR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MACRWUFFR) StoreBits(mask, b MACRWUFFR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACRWUFFR) SetBits(mask MACRWUFFR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MACRWUFFR) ClearBits(mask MACRWUFFR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MACRWUFFR) Load() MACRWUFFR_Bits             { return MACRWUFFR_Bits(r.U32.Load()) }
func (r *MACRWUFFR) Store(b MACRWUFFR_Bits)           { r.U32.Store(uint32(b)) }

type MACRWUFFR_Mask struct{ mmio.UM32 }

func (rm MACRWUFFR_Mask) Load() MACRWUFFR_Bits   { return MACRWUFFR_Bits(rm.UM32.Load()) }
func (rm MACRWUFFR_Mask) Store(b MACRWUFFR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) D() MACRWUFFR_Mask {
	return MACRWUFFR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 40)), uint32(D)}}
}

type MACPMTCSR_Bits uint32

func (b MACPMTCSR_Bits) Field(mask MACPMTCSR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACPMTCSR_Bits) J(v int) MACPMTCSR_Bits {
	return MACPMTCSR_Bits(bits.Make32(v, uint32(mask)))
}

type MACPMTCSR struct{ mmio.U32 }

func (r *MACPMTCSR) Bits(mask MACPMTCSR_Bits) MACPMTCSR_Bits {
	return MACPMTCSR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MACPMTCSR) StoreBits(mask, b MACPMTCSR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACPMTCSR) SetBits(mask MACPMTCSR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MACPMTCSR) ClearBits(mask MACPMTCSR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MACPMTCSR) Load() MACPMTCSR_Bits             { return MACPMTCSR_Bits(r.U32.Load()) }
func (r *MACPMTCSR) Store(b MACPMTCSR_Bits)           { r.U32.Store(uint32(b)) }

type MACPMTCSR_Mask struct{ mmio.UM32 }

func (rm MACPMTCSR_Mask) Load() MACPMTCSR_Bits   { return MACPMTCSR_Bits(rm.UM32.Load()) }
func (rm MACPMTCSR_Mask) Store(b MACPMTCSR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) WFFRPR() MACPMTCSR_Mask {
	return MACPMTCSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 44)), uint32(WFFRPR)}}
}

func (p *ETH_Periph) GU() MACPMTCSR_Mask {
	return MACPMTCSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 44)), uint32(GU)}}
}

func (p *ETH_Periph) WFR() MACPMTCSR_Mask {
	return MACPMTCSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 44)), uint32(WFR)}}
}

func (p *ETH_Periph) MPR() MACPMTCSR_Mask {
	return MACPMTCSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 44)), uint32(MPR)}}
}

func (p *ETH_Periph) WFE() MACPMTCSR_Mask {
	return MACPMTCSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 44)), uint32(WFE)}}
}

func (p *ETH_Periph) MPE() MACPMTCSR_Mask {
	return MACPMTCSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 44)), uint32(MPE)}}
}

func (p *ETH_Periph) PD() MACPMTCSR_Mask {
	return MACPMTCSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 44)), uint32(PD)}}
}

type MACSR_Bits uint32

func (b MACSR_Bits) Field(mask MACSR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACSR_Bits) J(v int) MACSR_Bits {
	return MACSR_Bits(bits.Make32(v, uint32(mask)))
}

type MACSR struct{ mmio.U32 }

func (r *MACSR) Bits(mask MACSR_Bits) MACSR_Bits { return MACSR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACSR) StoreBits(mask, b MACSR_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACSR) SetBits(mask MACSR_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *MACSR) ClearBits(mask MACSR_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *MACSR) Load() MACSR_Bits                { return MACSR_Bits(r.U32.Load()) }
func (r *MACSR) Store(b MACSR_Bits)              { r.U32.Store(uint32(b)) }

type MACSR_Mask struct{ mmio.UM32 }

func (rm MACSR_Mask) Load() MACSR_Bits   { return MACSR_Bits(rm.UM32.Load()) }
func (rm MACSR_Mask) Store(b MACSR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSTS() MACSR_Mask {
	return MACSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 56)), uint32(TSTS)}}
}

func (p *ETH_Periph) MMCTS() MACSR_Mask {
	return MACSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 56)), uint32(MMCTS)}}
}

func (p *ETH_Periph) MMMCRS() MACSR_Mask {
	return MACSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 56)), uint32(MMMCRS)}}
}

func (p *ETH_Periph) MMCS() MACSR_Mask {
	return MACSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 56)), uint32(MMCS)}}
}

func (p *ETH_Periph) PMTS() MACSR_Mask {
	return MACSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 56)), uint32(PMTS)}}
}

type MACIMR_Bits uint32

func (b MACIMR_Bits) Field(mask MACIMR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACIMR_Bits) J(v int) MACIMR_Bits {
	return MACIMR_Bits(bits.Make32(v, uint32(mask)))
}

type MACIMR struct{ mmio.U32 }

func (r *MACIMR) Bits(mask MACIMR_Bits) MACIMR_Bits { return MACIMR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACIMR) StoreBits(mask, b MACIMR_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACIMR) SetBits(mask MACIMR_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *MACIMR) ClearBits(mask MACIMR_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *MACIMR) Load() MACIMR_Bits                 { return MACIMR_Bits(r.U32.Load()) }
func (r *MACIMR) Store(b MACIMR_Bits)               { r.U32.Store(uint32(b)) }

type MACIMR_Mask struct{ mmio.UM32 }

func (rm MACIMR_Mask) Load() MACIMR_Bits   { return MACIMR_Bits(rm.UM32.Load()) }
func (rm MACIMR_Mask) Store(b MACIMR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSTIM() MACIMR_Mask {
	return MACIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 60)), uint32(TSTIM)}}
}

func (p *ETH_Periph) PMTIM() MACIMR_Mask {
	return MACIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 60)), uint32(PMTIM)}}
}

type MACA0HR_Bits uint32

func (b MACA0HR_Bits) Field(mask MACA0HR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA0HR_Bits) J(v int) MACA0HR_Bits {
	return MACA0HR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA0HR struct{ mmio.U32 }

func (r *MACA0HR) Bits(mask MACA0HR_Bits) MACA0HR_Bits { return MACA0HR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA0HR) StoreBits(mask, b MACA0HR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA0HR) SetBits(mask MACA0HR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA0HR) ClearBits(mask MACA0HR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA0HR) Load() MACA0HR_Bits                  { return MACA0HR_Bits(r.U32.Load()) }
func (r *MACA0HR) Store(b MACA0HR_Bits)                { r.U32.Store(uint32(b)) }

type MACA0HR_Mask struct{ mmio.UM32 }

func (rm MACA0HR_Mask) Load() MACA0HR_Bits   { return MACA0HR_Bits(rm.UM32.Load()) }
func (rm MACA0HR_Mask) Store(b MACA0HR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) MACA0H() MACA0HR_Mask {
	return MACA0HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 64)), uint32(MACA0H)}}
}

type MACA0LR_Bits uint32

func (b MACA0LR_Bits) Field(mask MACA0LR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA0LR_Bits) J(v int) MACA0LR_Bits {
	return MACA0LR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA0LR struct{ mmio.U32 }

func (r *MACA0LR) Bits(mask MACA0LR_Bits) MACA0LR_Bits { return MACA0LR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA0LR) StoreBits(mask, b MACA0LR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA0LR) SetBits(mask MACA0LR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA0LR) ClearBits(mask MACA0LR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA0LR) Load() MACA0LR_Bits                  { return MACA0LR_Bits(r.U32.Load()) }
func (r *MACA0LR) Store(b MACA0LR_Bits)                { r.U32.Store(uint32(b)) }

type MACA0LR_Mask struct{ mmio.UM32 }

func (rm MACA0LR_Mask) Load() MACA0LR_Bits   { return MACA0LR_Bits(rm.UM32.Load()) }
func (rm MACA0LR_Mask) Store(b MACA0LR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) MACA0L() MACA0LR_Mask {
	return MACA0LR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 68)), uint32(MACA0L)}}
}

type MACA1HR_Bits uint32

func (b MACA1HR_Bits) Field(mask MACA1HR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA1HR_Bits) J(v int) MACA1HR_Bits {
	return MACA1HR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA1HR struct{ mmio.U32 }

func (r *MACA1HR) Bits(mask MACA1HR_Bits) MACA1HR_Bits { return MACA1HR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA1HR) StoreBits(mask, b MACA1HR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA1HR) SetBits(mask MACA1HR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA1HR) ClearBits(mask MACA1HR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA1HR) Load() MACA1HR_Bits                  { return MACA1HR_Bits(r.U32.Load()) }
func (r *MACA1HR) Store(b MACA1HR_Bits)                { r.U32.Store(uint32(b)) }

type MACA1HR_Mask struct{ mmio.UM32 }

func (rm MACA1HR_Mask) Load() MACA1HR_Bits   { return MACA1HR_Bits(rm.UM32.Load()) }
func (rm MACA1HR_Mask) Store(b MACA1HR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) AE() MACA1HR_Mask {
	return MACA1HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 72)), uint32(AE)}}
}

func (p *ETH_Periph) SA() MACA1HR_Mask {
	return MACA1HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 72)), uint32(SA)}}
}

func (p *ETH_Periph) MBC() MACA1HR_Mask {
	return MACA1HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 72)), uint32(MBC)}}
}

func (p *ETH_Periph) MACA1H() MACA1HR_Mask {
	return MACA1HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 72)), uint32(MACA1H)}}
}

type MACA1LR_Bits uint32

func (b MACA1LR_Bits) Field(mask MACA1LR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA1LR_Bits) J(v int) MACA1LR_Bits {
	return MACA1LR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA1LR struct{ mmio.U32 }

func (r *MACA1LR) Bits(mask MACA1LR_Bits) MACA1LR_Bits { return MACA1LR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA1LR) StoreBits(mask, b MACA1LR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA1LR) SetBits(mask MACA1LR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA1LR) ClearBits(mask MACA1LR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA1LR) Load() MACA1LR_Bits                  { return MACA1LR_Bits(r.U32.Load()) }
func (r *MACA1LR) Store(b MACA1LR_Bits)                { r.U32.Store(uint32(b)) }

type MACA1LR_Mask struct{ mmio.UM32 }

func (rm MACA1LR_Mask) Load() MACA1LR_Bits   { return MACA1LR_Bits(rm.UM32.Load()) }
func (rm MACA1LR_Mask) Store(b MACA1LR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) MACA1L() MACA1LR_Mask {
	return MACA1LR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 76)), uint32(MACA1L)}}
}

type MACA2HR_Bits uint32

func (b MACA2HR_Bits) Field(mask MACA2HR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA2HR_Bits) J(v int) MACA2HR_Bits {
	return MACA2HR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA2HR struct{ mmio.U32 }

func (r *MACA2HR) Bits(mask MACA2HR_Bits) MACA2HR_Bits { return MACA2HR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA2HR) StoreBits(mask, b MACA2HR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA2HR) SetBits(mask MACA2HR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA2HR) ClearBits(mask MACA2HR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA2HR) Load() MACA2HR_Bits                  { return MACA2HR_Bits(r.U32.Load()) }
func (r *MACA2HR) Store(b MACA2HR_Bits)                { r.U32.Store(uint32(b)) }

type MACA2HR_Mask struct{ mmio.UM32 }

func (rm MACA2HR_Mask) Load() MACA2HR_Bits   { return MACA2HR_Bits(rm.UM32.Load()) }
func (rm MACA2HR_Mask) Store(b MACA2HR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) AE() MACA2HR_Mask {
	return MACA2HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 80)), uint32(AE)}}
}

func (p *ETH_Periph) SA() MACA2HR_Mask {
	return MACA2HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 80)), uint32(SA)}}
}

func (p *ETH_Periph) MBC() MACA2HR_Mask {
	return MACA2HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 80)), uint32(MBC)}}
}

func (p *ETH_Periph) MACA2H() MACA2HR_Mask {
	return MACA2HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 80)), uint32(MACA2H)}}
}

type MACA2LR_Bits uint32

func (b MACA2LR_Bits) Field(mask MACA2LR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA2LR_Bits) J(v int) MACA2LR_Bits {
	return MACA2LR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA2LR struct{ mmio.U32 }

func (r *MACA2LR) Bits(mask MACA2LR_Bits) MACA2LR_Bits { return MACA2LR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA2LR) StoreBits(mask, b MACA2LR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA2LR) SetBits(mask MACA2LR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA2LR) ClearBits(mask MACA2LR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA2LR) Load() MACA2LR_Bits                  { return MACA2LR_Bits(r.U32.Load()) }
func (r *MACA2LR) Store(b MACA2LR_Bits)                { r.U32.Store(uint32(b)) }

type MACA2LR_Mask struct{ mmio.UM32 }

func (rm MACA2LR_Mask) Load() MACA2LR_Bits   { return MACA2LR_Bits(rm.UM32.Load()) }
func (rm MACA2LR_Mask) Store(b MACA2LR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) MACA2L() MACA2LR_Mask {
	return MACA2LR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 84)), uint32(MACA2L)}}
}

type MACA3HR_Bits uint32

func (b MACA3HR_Bits) Field(mask MACA3HR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA3HR_Bits) J(v int) MACA3HR_Bits {
	return MACA3HR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA3HR struct{ mmio.U32 }

func (r *MACA3HR) Bits(mask MACA3HR_Bits) MACA3HR_Bits { return MACA3HR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA3HR) StoreBits(mask, b MACA3HR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA3HR) SetBits(mask MACA3HR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA3HR) ClearBits(mask MACA3HR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA3HR) Load() MACA3HR_Bits                  { return MACA3HR_Bits(r.U32.Load()) }
func (r *MACA3HR) Store(b MACA3HR_Bits)                { r.U32.Store(uint32(b)) }

type MACA3HR_Mask struct{ mmio.UM32 }

func (rm MACA3HR_Mask) Load() MACA3HR_Bits   { return MACA3HR_Bits(rm.UM32.Load()) }
func (rm MACA3HR_Mask) Store(b MACA3HR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) AE() MACA3HR_Mask {
	return MACA3HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 88)), uint32(AE)}}
}

func (p *ETH_Periph) SA() MACA3HR_Mask {
	return MACA3HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 88)), uint32(SA)}}
}

func (p *ETH_Periph) MBC() MACA3HR_Mask {
	return MACA3HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 88)), uint32(MBC)}}
}

func (p *ETH_Periph) MACA3H() MACA3HR_Mask {
	return MACA3HR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 88)), uint32(MACA3H)}}
}

type MACA3LR_Bits uint32

func (b MACA3LR_Bits) Field(mask MACA3LR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MACA3LR_Bits) J(v int) MACA3LR_Bits {
	return MACA3LR_Bits(bits.Make32(v, uint32(mask)))
}

type MACA3LR struct{ mmio.U32 }

func (r *MACA3LR) Bits(mask MACA3LR_Bits) MACA3LR_Bits { return MACA3LR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MACA3LR) StoreBits(mask, b MACA3LR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MACA3LR) SetBits(mask MACA3LR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MACA3LR) ClearBits(mask MACA3LR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MACA3LR) Load() MACA3LR_Bits                  { return MACA3LR_Bits(r.U32.Load()) }
func (r *MACA3LR) Store(b MACA3LR_Bits)                { r.U32.Store(uint32(b)) }

type MACA3LR_Mask struct{ mmio.UM32 }

func (rm MACA3LR_Mask) Load() MACA3LR_Bits   { return MACA3LR_Bits(rm.UM32.Load()) }
func (rm MACA3LR_Mask) Store(b MACA3LR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) MACA3L() MACA3LR_Mask {
	return MACA3LR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 92)), uint32(MACA3L)}}
}

type MMCCR_Bits uint32

func (b MMCCR_Bits) Field(mask MMCCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCCR_Bits) J(v int) MMCCR_Bits {
	return MMCCR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCCR struct{ mmio.U32 }

func (r *MMCCR) Bits(mask MMCCR_Bits) MMCCR_Bits { return MMCCR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MMCCR) StoreBits(mask, b MMCCR_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCCR) SetBits(mask MMCCR_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *MMCCR) ClearBits(mask MMCCR_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *MMCCR) Load() MMCCR_Bits                { return MMCCR_Bits(r.U32.Load()) }
func (r *MMCCR) Store(b MMCCR_Bits)              { r.U32.Store(uint32(b)) }

type MMCCR_Mask struct{ mmio.UM32 }

func (rm MMCCR_Mask) Load() MMCCR_Bits   { return MMCCR_Bits(rm.UM32.Load()) }
func (rm MMCCR_Mask) Store(b MMCCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) MCFHP() MMCCR_Mask {
	return MMCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 256)), uint32(MCFHP)}}
}

func (p *ETH_Periph) MCP() MMCCR_Mask {
	return MMCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 256)), uint32(MCP)}}
}

func (p *ETH_Periph) MCF() MMCCR_Mask {
	return MMCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 256)), uint32(MCF)}}
}

func (p *ETH_Periph) ROR() MMCCR_Mask {
	return MMCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 256)), uint32(ROR)}}
}

func (p *ETH_Periph) CSR() MMCCR_Mask {
	return MMCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 256)), uint32(CSR)}}
}

func (p *ETH_Periph) CR() MMCCR_Mask {
	return MMCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 256)), uint32(CR)}}
}

type MMCRIR_Bits uint32

func (b MMCRIR_Bits) Field(mask MMCRIR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCRIR_Bits) J(v int) MMCRIR_Bits {
	return MMCRIR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCRIR struct{ mmio.U32 }

func (r *MMCRIR) Bits(mask MMCRIR_Bits) MMCRIR_Bits { return MMCRIR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MMCRIR) StoreBits(mask, b MMCRIR_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCRIR) SetBits(mask MMCRIR_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *MMCRIR) ClearBits(mask MMCRIR_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *MMCRIR) Load() MMCRIR_Bits                 { return MMCRIR_Bits(r.U32.Load()) }
func (r *MMCRIR) Store(b MMCRIR_Bits)               { r.U32.Store(uint32(b)) }

type MMCRIR_Mask struct{ mmio.UM32 }

func (rm MMCRIR_Mask) Load() MMCRIR_Bits   { return MMCRIR_Bits(rm.UM32.Load()) }
func (rm MMCRIR_Mask) Store(b MMCRIR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) RGUFS() MMCRIR_Mask {
	return MMCRIR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 260)), uint32(RGUFS)}}
}

func (p *ETH_Periph) RFAES() MMCRIR_Mask {
	return MMCRIR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 260)), uint32(RFAES)}}
}

func (p *ETH_Periph) RFCES() MMCRIR_Mask {
	return MMCRIR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 260)), uint32(RFCES)}}
}

type MMCTIR_Bits uint32

func (b MMCTIR_Bits) Field(mask MMCTIR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCTIR_Bits) J(v int) MMCTIR_Bits {
	return MMCTIR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCTIR struct{ mmio.U32 }

func (r *MMCTIR) Bits(mask MMCTIR_Bits) MMCTIR_Bits { return MMCTIR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MMCTIR) StoreBits(mask, b MMCTIR_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCTIR) SetBits(mask MMCTIR_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *MMCTIR) ClearBits(mask MMCTIR_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *MMCTIR) Load() MMCTIR_Bits                 { return MMCTIR_Bits(r.U32.Load()) }
func (r *MMCTIR) Store(b MMCTIR_Bits)               { r.U32.Store(uint32(b)) }

type MMCTIR_Mask struct{ mmio.UM32 }

func (rm MMCTIR_Mask) Load() MMCTIR_Bits   { return MMCTIR_Bits(rm.UM32.Load()) }
func (rm MMCTIR_Mask) Store(b MMCTIR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TGFS() MMCTIR_Mask {
	return MMCTIR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 264)), uint32(TGFS)}}
}

func (p *ETH_Periph) TGFMSCS() MMCTIR_Mask {
	return MMCTIR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 264)), uint32(TGFMSCS)}}
}

func (p *ETH_Periph) TGFSCS() MMCTIR_Mask {
	return MMCTIR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 264)), uint32(TGFSCS)}}
}

type MMCRIMR_Bits uint32

func (b MMCRIMR_Bits) Field(mask MMCRIMR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCRIMR_Bits) J(v int) MMCRIMR_Bits {
	return MMCRIMR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCRIMR struct{ mmio.U32 }

func (r *MMCRIMR) Bits(mask MMCRIMR_Bits) MMCRIMR_Bits { return MMCRIMR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MMCRIMR) StoreBits(mask, b MMCRIMR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCRIMR) SetBits(mask MMCRIMR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MMCRIMR) ClearBits(mask MMCRIMR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MMCRIMR) Load() MMCRIMR_Bits                  { return MMCRIMR_Bits(r.U32.Load()) }
func (r *MMCRIMR) Store(b MMCRIMR_Bits)                { r.U32.Store(uint32(b)) }

type MMCRIMR_Mask struct{ mmio.UM32 }

func (rm MMCRIMR_Mask) Load() MMCRIMR_Bits   { return MMCRIMR_Bits(rm.UM32.Load()) }
func (rm MMCRIMR_Mask) Store(b MMCRIMR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) RGUFM() MMCRIMR_Mask {
	return MMCRIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 268)), uint32(RGUFM)}}
}

func (p *ETH_Periph) RFAEM() MMCRIMR_Mask {
	return MMCRIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 268)), uint32(RFAEM)}}
}

func (p *ETH_Periph) RFCEM() MMCRIMR_Mask {
	return MMCRIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 268)), uint32(RFCEM)}}
}

type MMCTIMR_Bits uint32

func (b MMCTIMR_Bits) Field(mask MMCTIMR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCTIMR_Bits) J(v int) MMCTIMR_Bits {
	return MMCTIMR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCTIMR struct{ mmio.U32 }

func (r *MMCTIMR) Bits(mask MMCTIMR_Bits) MMCTIMR_Bits { return MMCTIMR_Bits(r.U32.Bits(uint32(mask))) }
func (r *MMCTIMR) StoreBits(mask, b MMCTIMR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCTIMR) SetBits(mask MMCTIMR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *MMCTIMR) ClearBits(mask MMCTIMR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *MMCTIMR) Load() MMCTIMR_Bits                  { return MMCTIMR_Bits(r.U32.Load()) }
func (r *MMCTIMR) Store(b MMCTIMR_Bits)                { r.U32.Store(uint32(b)) }

type MMCTIMR_Mask struct{ mmio.UM32 }

func (rm MMCTIMR_Mask) Load() MMCTIMR_Bits   { return MMCTIMR_Bits(rm.UM32.Load()) }
func (rm MMCTIMR_Mask) Store(b MMCTIMR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TGFM() MMCTIMR_Mask {
	return MMCTIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 272)), uint32(TGFM)}}
}

func (p *ETH_Periph) TGFMSCM() MMCTIMR_Mask {
	return MMCTIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 272)), uint32(TGFMSCM)}}
}

func (p *ETH_Periph) TGFSCM() MMCTIMR_Mask {
	return MMCTIMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 272)), uint32(TGFSCM)}}
}

type MMCTGFSCCR_Bits uint32

func (b MMCTGFSCCR_Bits) Field(mask MMCTGFSCCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCTGFSCCR_Bits) J(v int) MMCTGFSCCR_Bits {
	return MMCTGFSCCR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCTGFSCCR struct{ mmio.U32 }

func (r *MMCTGFSCCR) Bits(mask MMCTGFSCCR_Bits) MMCTGFSCCR_Bits {
	return MMCTGFSCCR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MMCTGFSCCR) StoreBits(mask, b MMCTGFSCCR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCTGFSCCR) SetBits(mask MMCTGFSCCR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MMCTGFSCCR) ClearBits(mask MMCTGFSCCR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MMCTGFSCCR) Load() MMCTGFSCCR_Bits             { return MMCTGFSCCR_Bits(r.U32.Load()) }
func (r *MMCTGFSCCR) Store(b MMCTGFSCCR_Bits)           { r.U32.Store(uint32(b)) }

type MMCTGFSCCR_Mask struct{ mmio.UM32 }

func (rm MMCTGFSCCR_Mask) Load() MMCTGFSCCR_Bits   { return MMCTGFSCCR_Bits(rm.UM32.Load()) }
func (rm MMCTGFSCCR_Mask) Store(b MMCTGFSCCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TGFSCC() MMCTGFSCCR_Mask {
	return MMCTGFSCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 332)), uint32(TGFSCC)}}
}

type MMCTGFMSCCR_Bits uint32

func (b MMCTGFMSCCR_Bits) Field(mask MMCTGFMSCCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCTGFMSCCR_Bits) J(v int) MMCTGFMSCCR_Bits {
	return MMCTGFMSCCR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCTGFMSCCR struct{ mmio.U32 }

func (r *MMCTGFMSCCR) Bits(mask MMCTGFMSCCR_Bits) MMCTGFMSCCR_Bits {
	return MMCTGFMSCCR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MMCTGFMSCCR) StoreBits(mask, b MMCTGFMSCCR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCTGFMSCCR) SetBits(mask MMCTGFMSCCR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MMCTGFMSCCR) ClearBits(mask MMCTGFMSCCR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MMCTGFMSCCR) Load() MMCTGFMSCCR_Bits             { return MMCTGFMSCCR_Bits(r.U32.Load()) }
func (r *MMCTGFMSCCR) Store(b MMCTGFMSCCR_Bits)           { r.U32.Store(uint32(b)) }

type MMCTGFMSCCR_Mask struct{ mmio.UM32 }

func (rm MMCTGFMSCCR_Mask) Load() MMCTGFMSCCR_Bits   { return MMCTGFMSCCR_Bits(rm.UM32.Load()) }
func (rm MMCTGFMSCCR_Mask) Store(b MMCTGFMSCCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TGFMSCC() MMCTGFMSCCR_Mask {
	return MMCTGFMSCCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 336)), uint32(TGFMSCC)}}
}

type MMCTGFCR_Bits uint32

func (b MMCTGFCR_Bits) Field(mask MMCTGFCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCTGFCR_Bits) J(v int) MMCTGFCR_Bits {
	return MMCTGFCR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCTGFCR struct{ mmio.U32 }

func (r *MMCTGFCR) Bits(mask MMCTGFCR_Bits) MMCTGFCR_Bits {
	return MMCTGFCR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MMCTGFCR) StoreBits(mask, b MMCTGFCR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCTGFCR) SetBits(mask MMCTGFCR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MMCTGFCR) ClearBits(mask MMCTGFCR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MMCTGFCR) Load() MMCTGFCR_Bits             { return MMCTGFCR_Bits(r.U32.Load()) }
func (r *MMCTGFCR) Store(b MMCTGFCR_Bits)           { r.U32.Store(uint32(b)) }

type MMCTGFCR_Mask struct{ mmio.UM32 }

func (rm MMCTGFCR_Mask) Load() MMCTGFCR_Bits   { return MMCTGFCR_Bits(rm.UM32.Load()) }
func (rm MMCTGFCR_Mask) Store(b MMCTGFCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TGFC() MMCTGFCR_Mask {
	return MMCTGFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 360)), uint32(TGFC)}}
}

type MMCRFCECR_Bits uint32

func (b MMCRFCECR_Bits) Field(mask MMCRFCECR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCRFCECR_Bits) J(v int) MMCRFCECR_Bits {
	return MMCRFCECR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCRFCECR struct{ mmio.U32 }

func (r *MMCRFCECR) Bits(mask MMCRFCECR_Bits) MMCRFCECR_Bits {
	return MMCRFCECR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MMCRFCECR) StoreBits(mask, b MMCRFCECR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCRFCECR) SetBits(mask MMCRFCECR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MMCRFCECR) ClearBits(mask MMCRFCECR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MMCRFCECR) Load() MMCRFCECR_Bits             { return MMCRFCECR_Bits(r.U32.Load()) }
func (r *MMCRFCECR) Store(b MMCRFCECR_Bits)           { r.U32.Store(uint32(b)) }

type MMCRFCECR_Mask struct{ mmio.UM32 }

func (rm MMCRFCECR_Mask) Load() MMCRFCECR_Bits   { return MMCRFCECR_Bits(rm.UM32.Load()) }
func (rm MMCRFCECR_Mask) Store(b MMCRFCECR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) RFCEC() MMCRFCECR_Mask {
	return MMCRFCECR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 404)), uint32(RFCEC)}}
}

type MMCRFAECR_Bits uint32

func (b MMCRFAECR_Bits) Field(mask MMCRFAECR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCRFAECR_Bits) J(v int) MMCRFAECR_Bits {
	return MMCRFAECR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCRFAECR struct{ mmio.U32 }

func (r *MMCRFAECR) Bits(mask MMCRFAECR_Bits) MMCRFAECR_Bits {
	return MMCRFAECR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MMCRFAECR) StoreBits(mask, b MMCRFAECR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCRFAECR) SetBits(mask MMCRFAECR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MMCRFAECR) ClearBits(mask MMCRFAECR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MMCRFAECR) Load() MMCRFAECR_Bits             { return MMCRFAECR_Bits(r.U32.Load()) }
func (r *MMCRFAECR) Store(b MMCRFAECR_Bits)           { r.U32.Store(uint32(b)) }

type MMCRFAECR_Mask struct{ mmio.UM32 }

func (rm MMCRFAECR_Mask) Load() MMCRFAECR_Bits   { return MMCRFAECR_Bits(rm.UM32.Load()) }
func (rm MMCRFAECR_Mask) Store(b MMCRFAECR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) RFAEC() MMCRFAECR_Mask {
	return MMCRFAECR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 408)), uint32(RFAEC)}}
}

type MMCRGUFCR_Bits uint32

func (b MMCRGUFCR_Bits) Field(mask MMCRGUFCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask MMCRGUFCR_Bits) J(v int) MMCRGUFCR_Bits {
	return MMCRGUFCR_Bits(bits.Make32(v, uint32(mask)))
}

type MMCRGUFCR struct{ mmio.U32 }

func (r *MMCRGUFCR) Bits(mask MMCRGUFCR_Bits) MMCRGUFCR_Bits {
	return MMCRGUFCR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *MMCRGUFCR) StoreBits(mask, b MMCRGUFCR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *MMCRGUFCR) SetBits(mask MMCRGUFCR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *MMCRGUFCR) ClearBits(mask MMCRGUFCR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *MMCRGUFCR) Load() MMCRGUFCR_Bits             { return MMCRGUFCR_Bits(r.U32.Load()) }
func (r *MMCRGUFCR) Store(b MMCRGUFCR_Bits)           { r.U32.Store(uint32(b)) }

type MMCRGUFCR_Mask struct{ mmio.UM32 }

func (rm MMCRGUFCR_Mask) Load() MMCRGUFCR_Bits   { return MMCRGUFCR_Bits(rm.UM32.Load()) }
func (rm MMCRGUFCR_Mask) Store(b MMCRGUFCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) RGUFC() MMCRGUFCR_Mask {
	return MMCRGUFCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 452)), uint32(RGUFC)}}
}

type PTPTSCR_Bits uint32

func (b PTPTSCR_Bits) Field(mask PTPTSCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTSCR_Bits) J(v int) PTPTSCR_Bits {
	return PTPTSCR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTSCR struct{ mmio.U32 }

func (r *PTPTSCR) Bits(mask PTPTSCR_Bits) PTPTSCR_Bits { return PTPTSCR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPTSCR) StoreBits(mask, b PTPTSCR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTSCR) SetBits(mask PTPTSCR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPTSCR) ClearBits(mask PTPTSCR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTSCR) Load() PTPTSCR_Bits                  { return PTPTSCR_Bits(r.U32.Load()) }
func (r *PTPTSCR) Store(b PTPTSCR_Bits)                { r.U32.Store(uint32(b)) }

type PTPTSCR_Mask struct{ mmio.UM32 }

func (rm PTPTSCR_Mask) Load() PTPTSCR_Bits   { return PTPTSCR_Bits(rm.UM32.Load()) }
func (rm PTPTSCR_Mask) Store(b PTPTSCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSCNT() PTPTSCR_Mask {
	return PTPTSCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1792)), uint32(TSCNT)}}
}

func (p *ETH_Periph) TSARU() PTPTSCR_Mask {
	return PTPTSCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1792)), uint32(TSARU)}}
}

func (p *ETH_Periph) TSITE() PTPTSCR_Mask {
	return PTPTSCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1792)), uint32(TSITE)}}
}

func (p *ETH_Periph) TSSTU() PTPTSCR_Mask {
	return PTPTSCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1792)), uint32(TSSTU)}}
}

func (p *ETH_Periph) TSSTI() PTPTSCR_Mask {
	return PTPTSCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1792)), uint32(TSSTI)}}
}

func (p *ETH_Periph) TSFCU() PTPTSCR_Mask {
	return PTPTSCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1792)), uint32(TSFCU)}}
}

func (p *ETH_Periph) TSE() PTPTSCR_Mask {
	return PTPTSCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1792)), uint32(TSE)}}
}

type PTPSSIR_Bits uint32

func (b PTPSSIR_Bits) Field(mask PTPSSIR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPSSIR_Bits) J(v int) PTPSSIR_Bits {
	return PTPSSIR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPSSIR struct{ mmio.U32 }

func (r *PTPSSIR) Bits(mask PTPSSIR_Bits) PTPSSIR_Bits { return PTPSSIR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPSSIR) StoreBits(mask, b PTPSSIR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPSSIR) SetBits(mask PTPSSIR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPSSIR) ClearBits(mask PTPSSIR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPSSIR) Load() PTPSSIR_Bits                  { return PTPSSIR_Bits(r.U32.Load()) }
func (r *PTPSSIR) Store(b PTPSSIR_Bits)                { r.U32.Store(uint32(b)) }

type PTPSSIR_Mask struct{ mmio.UM32 }

func (rm PTPSSIR_Mask) Load() PTPSSIR_Bits   { return PTPSSIR_Bits(rm.UM32.Load()) }
func (rm PTPSSIR_Mask) Store(b PTPSSIR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) STSSI() PTPSSIR_Mask {
	return PTPSSIR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1796)), uint32(STSSI)}}
}

type PTPTSHR_Bits uint32

func (b PTPTSHR_Bits) Field(mask PTPTSHR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTSHR_Bits) J(v int) PTPTSHR_Bits {
	return PTPTSHR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTSHR struct{ mmio.U32 }

func (r *PTPTSHR) Bits(mask PTPTSHR_Bits) PTPTSHR_Bits { return PTPTSHR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPTSHR) StoreBits(mask, b PTPTSHR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTSHR) SetBits(mask PTPTSHR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPTSHR) ClearBits(mask PTPTSHR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTSHR) Load() PTPTSHR_Bits                  { return PTPTSHR_Bits(r.U32.Load()) }
func (r *PTPTSHR) Store(b PTPTSHR_Bits)                { r.U32.Store(uint32(b)) }

type PTPTSHR_Mask struct{ mmio.UM32 }

func (rm PTPTSHR_Mask) Load() PTPTSHR_Bits   { return PTPTSHR_Bits(rm.UM32.Load()) }
func (rm PTPTSHR_Mask) Store(b PTPTSHR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) STS() PTPTSHR_Mask {
	return PTPTSHR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1800)), uint32(STS)}}
}

type PTPTSLR_Bits uint32

func (b PTPTSLR_Bits) Field(mask PTPTSLR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTSLR_Bits) J(v int) PTPTSLR_Bits {
	return PTPTSLR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTSLR struct{ mmio.U32 }

func (r *PTPTSLR) Bits(mask PTPTSLR_Bits) PTPTSLR_Bits { return PTPTSLR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPTSLR) StoreBits(mask, b PTPTSLR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTSLR) SetBits(mask PTPTSLR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPTSLR) ClearBits(mask PTPTSLR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTSLR) Load() PTPTSLR_Bits                  { return PTPTSLR_Bits(r.U32.Load()) }
func (r *PTPTSLR) Store(b PTPTSLR_Bits)                { r.U32.Store(uint32(b)) }

type PTPTSLR_Mask struct{ mmio.UM32 }

func (rm PTPTSLR_Mask) Load() PTPTSLR_Bits   { return PTPTSLR_Bits(rm.UM32.Load()) }
func (rm PTPTSLR_Mask) Store(b PTPTSLR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) STPNS() PTPTSLR_Mask {
	return PTPTSLR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1804)), uint32(STPNS)}}
}

func (p *ETH_Periph) STSS() PTPTSLR_Mask {
	return PTPTSLR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1804)), uint32(STSS)}}
}

type PTPTSHUR_Bits uint32

func (b PTPTSHUR_Bits) Field(mask PTPTSHUR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTSHUR_Bits) J(v int) PTPTSHUR_Bits {
	return PTPTSHUR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTSHUR struct{ mmio.U32 }

func (r *PTPTSHUR) Bits(mask PTPTSHUR_Bits) PTPTSHUR_Bits {
	return PTPTSHUR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *PTPTSHUR) StoreBits(mask, b PTPTSHUR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTSHUR) SetBits(mask PTPTSHUR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *PTPTSHUR) ClearBits(mask PTPTSHUR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTSHUR) Load() PTPTSHUR_Bits             { return PTPTSHUR_Bits(r.U32.Load()) }
func (r *PTPTSHUR) Store(b PTPTSHUR_Bits)           { r.U32.Store(uint32(b)) }

type PTPTSHUR_Mask struct{ mmio.UM32 }

func (rm PTPTSHUR_Mask) Load() PTPTSHUR_Bits   { return PTPTSHUR_Bits(rm.UM32.Load()) }
func (rm PTPTSHUR_Mask) Store(b PTPTSHUR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSUS() PTPTSHUR_Mask {
	return PTPTSHUR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1808)), uint32(TSUS)}}
}

type PTPTSLUR_Bits uint32

func (b PTPTSLUR_Bits) Field(mask PTPTSLUR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTSLUR_Bits) J(v int) PTPTSLUR_Bits {
	return PTPTSLUR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTSLUR struct{ mmio.U32 }

func (r *PTPTSLUR) Bits(mask PTPTSLUR_Bits) PTPTSLUR_Bits {
	return PTPTSLUR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *PTPTSLUR) StoreBits(mask, b PTPTSLUR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTSLUR) SetBits(mask PTPTSLUR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *PTPTSLUR) ClearBits(mask PTPTSLUR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTSLUR) Load() PTPTSLUR_Bits             { return PTPTSLUR_Bits(r.U32.Load()) }
func (r *PTPTSLUR) Store(b PTPTSLUR_Bits)           { r.U32.Store(uint32(b)) }

type PTPTSLUR_Mask struct{ mmio.UM32 }

func (rm PTPTSLUR_Mask) Load() PTPTSLUR_Bits   { return PTPTSLUR_Bits(rm.UM32.Load()) }
func (rm PTPTSLUR_Mask) Store(b PTPTSLUR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSUPNS() PTPTSLUR_Mask {
	return PTPTSLUR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1812)), uint32(TSUPNS)}}
}

func (p *ETH_Periph) TSUSS() PTPTSLUR_Mask {
	return PTPTSLUR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1812)), uint32(TSUSS)}}
}

type PTPTSAR_Bits uint32

func (b PTPTSAR_Bits) Field(mask PTPTSAR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTSAR_Bits) J(v int) PTPTSAR_Bits {
	return PTPTSAR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTSAR struct{ mmio.U32 }

func (r *PTPTSAR) Bits(mask PTPTSAR_Bits) PTPTSAR_Bits { return PTPTSAR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPTSAR) StoreBits(mask, b PTPTSAR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTSAR) SetBits(mask PTPTSAR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPTSAR) ClearBits(mask PTPTSAR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTSAR) Load() PTPTSAR_Bits                  { return PTPTSAR_Bits(r.U32.Load()) }
func (r *PTPTSAR) Store(b PTPTSAR_Bits)                { r.U32.Store(uint32(b)) }

type PTPTSAR_Mask struct{ mmio.UM32 }

func (rm PTPTSAR_Mask) Load() PTPTSAR_Bits   { return PTPTSAR_Bits(rm.UM32.Load()) }
func (rm PTPTSAR_Mask) Store(b PTPTSAR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSA() PTPTSAR_Mask {
	return PTPTSAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1816)), uint32(TSA)}}
}

type PTPTTHR_Bits uint32

func (b PTPTTHR_Bits) Field(mask PTPTTHR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTTHR_Bits) J(v int) PTPTTHR_Bits {
	return PTPTTHR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTTHR struct{ mmio.U32 }

func (r *PTPTTHR) Bits(mask PTPTTHR_Bits) PTPTTHR_Bits { return PTPTTHR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPTTHR) StoreBits(mask, b PTPTTHR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTTHR) SetBits(mask PTPTTHR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPTTHR) ClearBits(mask PTPTTHR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTTHR) Load() PTPTTHR_Bits                  { return PTPTTHR_Bits(r.U32.Load()) }
func (r *PTPTTHR) Store(b PTPTTHR_Bits)                { r.U32.Store(uint32(b)) }

type PTPTTHR_Mask struct{ mmio.UM32 }

func (rm PTPTTHR_Mask) Load() PTPTTHR_Bits   { return PTPTTHR_Bits(rm.UM32.Load()) }
func (rm PTPTTHR_Mask) Store(b PTPTTHR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TTSH() PTPTTHR_Mask {
	return PTPTTHR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1820)), uint32(TTSH)}}
}

type PTPTTLR_Bits uint32

func (b PTPTTLR_Bits) Field(mask PTPTTLR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTTLR_Bits) J(v int) PTPTTLR_Bits {
	return PTPTTLR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTTLR struct{ mmio.U32 }

func (r *PTPTTLR) Bits(mask PTPTTLR_Bits) PTPTTLR_Bits { return PTPTTLR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPTTLR) StoreBits(mask, b PTPTTLR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTTLR) SetBits(mask PTPTTLR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPTTLR) ClearBits(mask PTPTTLR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTTLR) Load() PTPTTLR_Bits                  { return PTPTTLR_Bits(r.U32.Load()) }
func (r *PTPTTLR) Store(b PTPTTLR_Bits)                { r.U32.Store(uint32(b)) }

type PTPTTLR_Mask struct{ mmio.UM32 }

func (rm PTPTTLR_Mask) Load() PTPTTLR_Bits   { return PTPTTLR_Bits(rm.UM32.Load()) }
func (rm PTPTTLR_Mask) Store(b PTPTTLR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TTSL() PTPTTLR_Mask {
	return PTPTTLR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1824)), uint32(TTSL)}}
}

type RESERVED8_Bits uint32

func (b RESERVED8_Bits) Field(mask RESERVED8_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask RESERVED8_Bits) J(v int) RESERVED8_Bits {
	return RESERVED8_Bits(bits.Make32(v, uint32(mask)))
}

type RESERVED8 struct{ mmio.U32 }

func (r *RESERVED8) Bits(mask RESERVED8_Bits) RESERVED8_Bits {
	return RESERVED8_Bits(r.U32.Bits(uint32(mask)))
}
func (r *RESERVED8) StoreBits(mask, b RESERVED8_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *RESERVED8) SetBits(mask RESERVED8_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *RESERVED8) ClearBits(mask RESERVED8_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *RESERVED8) Load() RESERVED8_Bits             { return RESERVED8_Bits(r.U32.Load()) }
func (r *RESERVED8) Store(b RESERVED8_Bits)           { r.U32.Store(uint32(b)) }

type RESERVED8_Mask struct{ mmio.UM32 }

func (rm RESERVED8_Mask) Load() RESERVED8_Bits   { return RESERVED8_Bits(rm.UM32.Load()) }
func (rm RESERVED8_Mask) Store(b RESERVED8_Bits) { rm.UM32.Store(uint32(b)) }

type PTPTSSR_Bits uint32

func (b PTPTSSR_Bits) Field(mask PTPTSSR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PTPTSSR_Bits) J(v int) PTPTSSR_Bits {
	return PTPTSSR_Bits(bits.Make32(v, uint32(mask)))
}

type PTPTSSR struct{ mmio.U32 }

func (r *PTPTSSR) Bits(mask PTPTSSR_Bits) PTPTSSR_Bits { return PTPTSSR_Bits(r.U32.Bits(uint32(mask))) }
func (r *PTPTSSR) StoreBits(mask, b PTPTSSR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PTPTSSR) SetBits(mask PTPTSSR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *PTPTSSR) ClearBits(mask PTPTSSR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *PTPTSSR) Load() PTPTSSR_Bits                  { return PTPTSSR_Bits(r.U32.Load()) }
func (r *PTPTSSR) Store(b PTPTSSR_Bits)                { r.U32.Store(uint32(b)) }

type PTPTSSR_Mask struct{ mmio.UM32 }

func (rm PTPTSSR_Mask) Load() PTPTSSR_Bits   { return PTPTSSR_Bits(rm.UM32.Load()) }
func (rm PTPTSSR_Mask) Store(b PTPTSSR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSSMRME() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSMRME)}}
}

func (p *ETH_Periph) TSSEME() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSEME)}}
}

func (p *ETH_Periph) TSSIPV4FE() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSIPV4FE)}}
}

func (p *ETH_Periph) TSSIPV6FE() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSIPV6FE)}}
}

func (p *ETH_Periph) TSSPTPOEFE() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSPTPOEFE)}}
}

func (p *ETH_Periph) TSPTPPSV2E() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSPTPPSV2E)}}
}

func (p *ETH_Periph) TSSSR() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSSR)}}
}

func (p *ETH_Periph) TSSARFE() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSARFE)}}
}

func (p *ETH_Periph) TSTTR() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSTTR)}}
}

func (p *ETH_Periph) TSSO() PTPTSSR_Mask {
	return PTPTSSR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 1832)), uint32(TSSO)}}
}

type DMABMR_Bits uint32

func (b DMABMR_Bits) Field(mask DMABMR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMABMR_Bits) J(v int) DMABMR_Bits {
	return DMABMR_Bits(bits.Make32(v, uint32(mask)))
}

type DMABMR struct{ mmio.U32 }

func (r *DMABMR) Bits(mask DMABMR_Bits) DMABMR_Bits { return DMABMR_Bits(r.U32.Bits(uint32(mask))) }
func (r *DMABMR) StoreBits(mask, b DMABMR_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMABMR) SetBits(mask DMABMR_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *DMABMR) ClearBits(mask DMABMR_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *DMABMR) Load() DMABMR_Bits                 { return DMABMR_Bits(r.U32.Load()) }
func (r *DMABMR) Store(b DMABMR_Bits)               { r.U32.Store(uint32(b)) }

type DMABMR_Mask struct{ mmio.UM32 }

func (rm DMABMR_Mask) Load() DMABMR_Bits   { return DMABMR_Bits(rm.UM32.Load()) }
func (rm DMABMR_Mask) Store(b DMABMR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) AAB() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(AAB)}}
}

func (p *ETH_Periph) FPM() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(FPM)}}
}

func (p *ETH_Periph) USP() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(USP)}}
}

func (p *ETH_Periph) RDP() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(RDP)}}
}

func (p *ETH_Periph) FB() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(FB)}}
}

func (p *ETH_Periph) RTPR() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(RTPR)}}
}

func (p *ETH_Periph) PBL() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(PBL)}}
}

func (p *ETH_Periph) EDE() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(EDE)}}
}

func (p *ETH_Periph) DSL() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(DSL)}}
}

func (p *ETH_Periph) DA() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(DA)}}
}

func (p *ETH_Periph) SR() DMABMR_Mask {
	return DMABMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4096)), uint32(SR)}}
}

type DMATPDR_Bits uint32

func (b DMATPDR_Bits) Field(mask DMATPDR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMATPDR_Bits) J(v int) DMATPDR_Bits {
	return DMATPDR_Bits(bits.Make32(v, uint32(mask)))
}

type DMATPDR struct{ mmio.U32 }

func (r *DMATPDR) Bits(mask DMATPDR_Bits) DMATPDR_Bits { return DMATPDR_Bits(r.U32.Bits(uint32(mask))) }
func (r *DMATPDR) StoreBits(mask, b DMATPDR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMATPDR) SetBits(mask DMATPDR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *DMATPDR) ClearBits(mask DMATPDR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *DMATPDR) Load() DMATPDR_Bits                  { return DMATPDR_Bits(r.U32.Load()) }
func (r *DMATPDR) Store(b DMATPDR_Bits)                { r.U32.Store(uint32(b)) }

type DMATPDR_Mask struct{ mmio.UM32 }

func (rm DMATPDR_Mask) Load() DMATPDR_Bits   { return DMATPDR_Bits(rm.UM32.Load()) }
func (rm DMATPDR_Mask) Store(b DMATPDR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TPD() DMATPDR_Mask {
	return DMATPDR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4100)), uint32(TPD)}}
}

type DMARPDR_Bits uint32

func (b DMARPDR_Bits) Field(mask DMARPDR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMARPDR_Bits) J(v int) DMARPDR_Bits {
	return DMARPDR_Bits(bits.Make32(v, uint32(mask)))
}

type DMARPDR struct{ mmio.U32 }

func (r *DMARPDR) Bits(mask DMARPDR_Bits) DMARPDR_Bits { return DMARPDR_Bits(r.U32.Bits(uint32(mask))) }
func (r *DMARPDR) StoreBits(mask, b DMARPDR_Bits)      { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMARPDR) SetBits(mask DMARPDR_Bits)           { r.U32.SetBits(uint32(mask)) }
func (r *DMARPDR) ClearBits(mask DMARPDR_Bits)         { r.U32.ClearBits(uint32(mask)) }
func (r *DMARPDR) Load() DMARPDR_Bits                  { return DMARPDR_Bits(r.U32.Load()) }
func (r *DMARPDR) Store(b DMARPDR_Bits)                { r.U32.Store(uint32(b)) }

type DMARPDR_Mask struct{ mmio.UM32 }

func (rm DMARPDR_Mask) Load() DMARPDR_Bits   { return DMARPDR_Bits(rm.UM32.Load()) }
func (rm DMARPDR_Mask) Store(b DMARPDR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) RPD() DMARPDR_Mask {
	return DMARPDR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4104)), uint32(RPD)}}
}

type DMARDLAR_Bits uint32

func (b DMARDLAR_Bits) Field(mask DMARDLAR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMARDLAR_Bits) J(v int) DMARDLAR_Bits {
	return DMARDLAR_Bits(bits.Make32(v, uint32(mask)))
}

type DMARDLAR struct{ mmio.U32 }

func (r *DMARDLAR) Bits(mask DMARDLAR_Bits) DMARDLAR_Bits {
	return DMARDLAR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMARDLAR) StoreBits(mask, b DMARDLAR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMARDLAR) SetBits(mask DMARDLAR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMARDLAR) ClearBits(mask DMARDLAR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMARDLAR) Load() DMARDLAR_Bits             { return DMARDLAR_Bits(r.U32.Load()) }
func (r *DMARDLAR) Store(b DMARDLAR_Bits)           { r.U32.Store(uint32(b)) }

type DMARDLAR_Mask struct{ mmio.UM32 }

func (rm DMARDLAR_Mask) Load() DMARDLAR_Bits   { return DMARDLAR_Bits(rm.UM32.Load()) }
func (rm DMARDLAR_Mask) Store(b DMARDLAR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) SRL() DMARDLAR_Mask {
	return DMARDLAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4108)), uint32(SRL)}}
}

type DMATDLAR_Bits uint32

func (b DMATDLAR_Bits) Field(mask DMATDLAR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMATDLAR_Bits) J(v int) DMATDLAR_Bits {
	return DMATDLAR_Bits(bits.Make32(v, uint32(mask)))
}

type DMATDLAR struct{ mmio.U32 }

func (r *DMATDLAR) Bits(mask DMATDLAR_Bits) DMATDLAR_Bits {
	return DMATDLAR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMATDLAR) StoreBits(mask, b DMATDLAR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMATDLAR) SetBits(mask DMATDLAR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMATDLAR) ClearBits(mask DMATDLAR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMATDLAR) Load() DMATDLAR_Bits             { return DMATDLAR_Bits(r.U32.Load()) }
func (r *DMATDLAR) Store(b DMATDLAR_Bits)           { r.U32.Store(uint32(b)) }

type DMATDLAR_Mask struct{ mmio.UM32 }

func (rm DMATDLAR_Mask) Load() DMATDLAR_Bits   { return DMATDLAR_Bits(rm.UM32.Load()) }
func (rm DMATDLAR_Mask) Store(b DMATDLAR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) STL() DMATDLAR_Mask {
	return DMATDLAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4112)), uint32(STL)}}
}

type DMASR_Bits uint32

func (b DMASR_Bits) Field(mask DMASR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMASR_Bits) J(v int) DMASR_Bits {
	return DMASR_Bits(bits.Make32(v, uint32(mask)))
}

type DMASR struct{ mmio.U32 }

func (r *DMASR) Bits(mask DMASR_Bits) DMASR_Bits { return DMASR_Bits(r.U32.Bits(uint32(mask))) }
func (r *DMASR) StoreBits(mask, b DMASR_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMASR) SetBits(mask DMASR_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *DMASR) ClearBits(mask DMASR_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *DMASR) Load() DMASR_Bits                { return DMASR_Bits(r.U32.Load()) }
func (r *DMASR) Store(b DMASR_Bits)              { r.U32.Store(uint32(b)) }

type DMASR_Mask struct{ mmio.UM32 }

func (rm DMASR_Mask) Load() DMASR_Bits   { return DMASR_Bits(rm.UM32.Load()) }
func (rm DMASR_Mask) Store(b DMASR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) TSTS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(TSTS)}}
}

func (p *ETH_Periph) PMTS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(PMTS)}}
}

func (p *ETH_Periph) MMCS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(MMCS)}}
}

func (p *ETH_Periph) EBS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(EBS)}}
}

func (p *ETH_Periph) TPS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(TPS)}}
}

func (p *ETH_Periph) RPS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(RPS)}}
}

func (p *ETH_Periph) NIS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(NIS)}}
}

func (p *ETH_Periph) AIS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(AIS)}}
}

func (p *ETH_Periph) ERS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(ERS)}}
}

func (p *ETH_Periph) FBES() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(FBES)}}
}

func (p *ETH_Periph) ETS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(ETS)}}
}

func (p *ETH_Periph) RWTS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(RWTS)}}
}

func (p *ETH_Periph) RPSS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(RPSS)}}
}

func (p *ETH_Periph) RBUS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(RBUS)}}
}

func (p *ETH_Periph) RS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(RS)}}
}

func (p *ETH_Periph) TUS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(TUS)}}
}

func (p *ETH_Periph) ROS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(ROS)}}
}

func (p *ETH_Periph) TJTS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(TJTS)}}
}

func (p *ETH_Periph) TBUS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(TBUS)}}
}

func (p *ETH_Periph) TPSS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(TPSS)}}
}

func (p *ETH_Periph) TS() DMASR_Mask {
	return DMASR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4116)), uint32(TS)}}
}

type DMAOMR_Bits uint32

func (b DMAOMR_Bits) Field(mask DMAOMR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMAOMR_Bits) J(v int) DMAOMR_Bits {
	return DMAOMR_Bits(bits.Make32(v, uint32(mask)))
}

type DMAOMR struct{ mmio.U32 }

func (r *DMAOMR) Bits(mask DMAOMR_Bits) DMAOMR_Bits { return DMAOMR_Bits(r.U32.Bits(uint32(mask))) }
func (r *DMAOMR) StoreBits(mask, b DMAOMR_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMAOMR) SetBits(mask DMAOMR_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *DMAOMR) ClearBits(mask DMAOMR_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *DMAOMR) Load() DMAOMR_Bits                 { return DMAOMR_Bits(r.U32.Load()) }
func (r *DMAOMR) Store(b DMAOMR_Bits)               { r.U32.Store(uint32(b)) }

type DMAOMR_Mask struct{ mmio.UM32 }

func (rm DMAOMR_Mask) Load() DMAOMR_Bits   { return DMAOMR_Bits(rm.UM32.Load()) }
func (rm DMAOMR_Mask) Store(b DMAOMR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) DTCEFD() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(DTCEFD)}}
}

func (p *ETH_Periph) RSF() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(RSF)}}
}

func (p *ETH_Periph) DFRF() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(DFRF)}}
}

func (p *ETH_Periph) TSF() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(TSF)}}
}

func (p *ETH_Periph) FTF() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(FTF)}}
}

func (p *ETH_Periph) TTC() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(TTC)}}
}

func (p *ETH_Periph) ST() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(ST)}}
}

func (p *ETH_Periph) FEF() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(FEF)}}
}

func (p *ETH_Periph) FUGF() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(FUGF)}}
}

func (p *ETH_Periph) RTC() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(RTC)}}
}

func (p *ETH_Periph) OSF() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(OSF)}}
}

func (p *ETH_Periph) SR() DMAOMR_Mask {
	return DMAOMR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4120)), uint32(SR)}}
}

type DMAIER_Bits uint32

func (b DMAIER_Bits) Field(mask DMAIER_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMAIER_Bits) J(v int) DMAIER_Bits {
	return DMAIER_Bits(bits.Make32(v, uint32(mask)))
}

type DMAIER struct{ mmio.U32 }

func (r *DMAIER) Bits(mask DMAIER_Bits) DMAIER_Bits { return DMAIER_Bits(r.U32.Bits(uint32(mask))) }
func (r *DMAIER) StoreBits(mask, b DMAIER_Bits)     { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMAIER) SetBits(mask DMAIER_Bits)          { r.U32.SetBits(uint32(mask)) }
func (r *DMAIER) ClearBits(mask DMAIER_Bits)        { r.U32.ClearBits(uint32(mask)) }
func (r *DMAIER) Load() DMAIER_Bits                 { return DMAIER_Bits(r.U32.Load()) }
func (r *DMAIER) Store(b DMAIER_Bits)               { r.U32.Store(uint32(b)) }

type DMAIER_Mask struct{ mmio.UM32 }

func (rm DMAIER_Mask) Load() DMAIER_Bits   { return DMAIER_Bits(rm.UM32.Load()) }
func (rm DMAIER_Mask) Store(b DMAIER_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) NISE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(NISE)}}
}

func (p *ETH_Periph) AISE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(AISE)}}
}

func (p *ETH_Periph) ERIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(ERIE)}}
}

func (p *ETH_Periph) FBEIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(FBEIE)}}
}

func (p *ETH_Periph) ETIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(ETIE)}}
}

func (p *ETH_Periph) RWTIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(RWTIE)}}
}

func (p *ETH_Periph) RPSIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(RPSIE)}}
}

func (p *ETH_Periph) RBUIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(RBUIE)}}
}

func (p *ETH_Periph) RIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(RIE)}}
}

func (p *ETH_Periph) TUIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(TUIE)}}
}

func (p *ETH_Periph) ROIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(ROIE)}}
}

func (p *ETH_Periph) TJTIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(TJTIE)}}
}

func (p *ETH_Periph) TBUIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(TBUIE)}}
}

func (p *ETH_Periph) TPSIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(TPSIE)}}
}

func (p *ETH_Periph) TIE() DMAIER_Mask {
	return DMAIER_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4124)), uint32(TIE)}}
}

type DMAMFBOCR_Bits uint32

func (b DMAMFBOCR_Bits) Field(mask DMAMFBOCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMAMFBOCR_Bits) J(v int) DMAMFBOCR_Bits {
	return DMAMFBOCR_Bits(bits.Make32(v, uint32(mask)))
}

type DMAMFBOCR struct{ mmio.U32 }

func (r *DMAMFBOCR) Bits(mask DMAMFBOCR_Bits) DMAMFBOCR_Bits {
	return DMAMFBOCR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMAMFBOCR) StoreBits(mask, b DMAMFBOCR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMAMFBOCR) SetBits(mask DMAMFBOCR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMAMFBOCR) ClearBits(mask DMAMFBOCR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMAMFBOCR) Load() DMAMFBOCR_Bits             { return DMAMFBOCR_Bits(r.U32.Load()) }
func (r *DMAMFBOCR) Store(b DMAMFBOCR_Bits)           { r.U32.Store(uint32(b)) }

type DMAMFBOCR_Mask struct{ mmio.UM32 }

func (rm DMAMFBOCR_Mask) Load() DMAMFBOCR_Bits   { return DMAMFBOCR_Bits(rm.UM32.Load()) }
func (rm DMAMFBOCR_Mask) Store(b DMAMFBOCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) OFOC() DMAMFBOCR_Mask {
	return DMAMFBOCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4128)), uint32(OFOC)}}
}

func (p *ETH_Periph) MFA() DMAMFBOCR_Mask {
	return DMAMFBOCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4128)), uint32(MFA)}}
}

func (p *ETH_Periph) OMFC() DMAMFBOCR_Mask {
	return DMAMFBOCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4128)), uint32(OMFC)}}
}

func (p *ETH_Periph) MFC() DMAMFBOCR_Mask {
	return DMAMFBOCR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4128)), uint32(MFC)}}
}

type DMARSWTR_Bits uint32

func (b DMARSWTR_Bits) Field(mask DMARSWTR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMARSWTR_Bits) J(v int) DMARSWTR_Bits {
	return DMARSWTR_Bits(bits.Make32(v, uint32(mask)))
}

type DMARSWTR struct{ mmio.U32 }

func (r *DMARSWTR) Bits(mask DMARSWTR_Bits) DMARSWTR_Bits {
	return DMARSWTR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMARSWTR) StoreBits(mask, b DMARSWTR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMARSWTR) SetBits(mask DMARSWTR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMARSWTR) ClearBits(mask DMARSWTR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMARSWTR) Load() DMARSWTR_Bits             { return DMARSWTR_Bits(r.U32.Load()) }
func (r *DMARSWTR) Store(b DMARSWTR_Bits)           { r.U32.Store(uint32(b)) }

type DMARSWTR_Mask struct{ mmio.UM32 }

func (rm DMARSWTR_Mask) Load() DMARSWTR_Bits   { return DMARSWTR_Bits(rm.UM32.Load()) }
func (rm DMARSWTR_Mask) Store(b DMARSWTR_Bits) { rm.UM32.Store(uint32(b)) }

type DMACHTDR_Bits uint32

func (b DMACHTDR_Bits) Field(mask DMACHTDR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMACHTDR_Bits) J(v int) DMACHTDR_Bits {
	return DMACHTDR_Bits(bits.Make32(v, uint32(mask)))
}

type DMACHTDR struct{ mmio.U32 }

func (r *DMACHTDR) Bits(mask DMACHTDR_Bits) DMACHTDR_Bits {
	return DMACHTDR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMACHTDR) StoreBits(mask, b DMACHTDR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMACHTDR) SetBits(mask DMACHTDR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMACHTDR) ClearBits(mask DMACHTDR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMACHTDR) Load() DMACHTDR_Bits             { return DMACHTDR_Bits(r.U32.Load()) }
func (r *DMACHTDR) Store(b DMACHTDR_Bits)           { r.U32.Store(uint32(b)) }

type DMACHTDR_Mask struct{ mmio.UM32 }

func (rm DMACHTDR_Mask) Load() DMACHTDR_Bits   { return DMACHTDR_Bits(rm.UM32.Load()) }
func (rm DMACHTDR_Mask) Store(b DMACHTDR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) HTDAP() DMACHTDR_Mask {
	return DMACHTDR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4168)), uint32(HTDAP)}}
}

type DMACHRDR_Bits uint32

func (b DMACHRDR_Bits) Field(mask DMACHRDR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMACHRDR_Bits) J(v int) DMACHRDR_Bits {
	return DMACHRDR_Bits(bits.Make32(v, uint32(mask)))
}

type DMACHRDR struct{ mmio.U32 }

func (r *DMACHRDR) Bits(mask DMACHRDR_Bits) DMACHRDR_Bits {
	return DMACHRDR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMACHRDR) StoreBits(mask, b DMACHRDR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMACHRDR) SetBits(mask DMACHRDR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMACHRDR) ClearBits(mask DMACHRDR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMACHRDR) Load() DMACHRDR_Bits             { return DMACHRDR_Bits(r.U32.Load()) }
func (r *DMACHRDR) Store(b DMACHRDR_Bits)           { r.U32.Store(uint32(b)) }

type DMACHRDR_Mask struct{ mmio.UM32 }

func (rm DMACHRDR_Mask) Load() DMACHRDR_Bits   { return DMACHRDR_Bits(rm.UM32.Load()) }
func (rm DMACHRDR_Mask) Store(b DMACHRDR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) HRDAP() DMACHRDR_Mask {
	return DMACHRDR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4172)), uint32(HRDAP)}}
}

type DMACHTBAR_Bits uint32

func (b DMACHTBAR_Bits) Field(mask DMACHTBAR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMACHTBAR_Bits) J(v int) DMACHTBAR_Bits {
	return DMACHTBAR_Bits(bits.Make32(v, uint32(mask)))
}

type DMACHTBAR struct{ mmio.U32 }

func (r *DMACHTBAR) Bits(mask DMACHTBAR_Bits) DMACHTBAR_Bits {
	return DMACHTBAR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMACHTBAR) StoreBits(mask, b DMACHTBAR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMACHTBAR) SetBits(mask DMACHTBAR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMACHTBAR) ClearBits(mask DMACHTBAR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMACHTBAR) Load() DMACHTBAR_Bits             { return DMACHTBAR_Bits(r.U32.Load()) }
func (r *DMACHTBAR) Store(b DMACHTBAR_Bits)           { r.U32.Store(uint32(b)) }

type DMACHTBAR_Mask struct{ mmio.UM32 }

func (rm DMACHTBAR_Mask) Load() DMACHTBAR_Bits   { return DMACHTBAR_Bits(rm.UM32.Load()) }
func (rm DMACHTBAR_Mask) Store(b DMACHTBAR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) HTBAP() DMACHTBAR_Mask {
	return DMACHTBAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4176)), uint32(HTBAP)}}
}

type DMACHRBAR_Bits uint32

func (b DMACHRBAR_Bits) Field(mask DMACHRBAR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask DMACHRBAR_Bits) J(v int) DMACHRBAR_Bits {
	return DMACHRBAR_Bits(bits.Make32(v, uint32(mask)))
}

type DMACHRBAR struct{ mmio.U32 }

func (r *DMACHRBAR) Bits(mask DMACHRBAR_Bits) DMACHRBAR_Bits {
	return DMACHRBAR_Bits(r.U32.Bits(uint32(mask)))
}
func (r *DMACHRBAR) StoreBits(mask, b DMACHRBAR_Bits) { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *DMACHRBAR) SetBits(mask DMACHRBAR_Bits)      { r.U32.SetBits(uint32(mask)) }
func (r *DMACHRBAR) ClearBits(mask DMACHRBAR_Bits)    { r.U32.ClearBits(uint32(mask)) }
func (r *DMACHRBAR) Load() DMACHRBAR_Bits             { return DMACHRBAR_Bits(r.U32.Load()) }
func (r *DMACHRBAR) Store(b DMACHRBAR_Bits)           { r.U32.Store(uint32(b)) }

type DMACHRBAR_Mask struct{ mmio.UM32 }

func (rm DMACHRBAR_Mask) Load() DMACHRBAR_Bits   { return DMACHRBAR_Bits(rm.UM32.Load()) }
func (rm DMACHRBAR_Mask) Store(b DMACHRBAR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *ETH_Periph) HRBAP() DMACHRBAR_Mask {
	return DMACHRBAR_Mask{mmio.UM32{(*mmio.U32)(unsafe.Pointer(uintptr(unsafe.Pointer(p)) + 4180)), uint32(HRBAP)}}
}
