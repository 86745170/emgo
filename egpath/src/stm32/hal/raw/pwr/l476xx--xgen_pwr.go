// +build l476xx

package pwr

// DO NOT EDIT THIS FILE. GENERATED BY xgen.

import (
	"bits"
	"mmio"
	"unsafe"

	"stm32/o/l476xx/mmap"
)

type PWR_Periph struct {
	CR1   CR1
	CR2   CR2
	CR3   CR3
	CR4   CR4
	SR1   SR1
	SR2   SR2
	SCR   SCR
	_     uint32
	PUCRA PUCRA
	PDCRA PDCRA
	PUCRB PUCRB
	PDCRB PDCRB
	PUCRC PUCRC
	PDCRC PDCRC
	PUCRD PUCRD
	PDCRD PDCRD
	PUCRE PUCRE
	PDCRE PDCRE
	PUCRF PUCRF
	PDCRF PDCRF
	PUCRG PUCRG
	PDCRG PDCRG
	PUCRH PUCRH
	PDCRH PDCRH
}

func (p *PWR_Periph) BaseAddr() uintptr {
	return uintptr(unsafe.Pointer(p))
}

//emgo:const
var PWR = (*PWR_Periph)(unsafe.Pointer(uintptr(mmap.PWR_BASE)))

type CR1_Bits uint32

func (b CR1_Bits) Field(mask CR1_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask CR1_Bits) J(v int) CR1_Bits {
	return CR1_Bits(bits.Make32(v, uint32(mask)))
}

type CR1 struct{ mmio.U32 }

func (r *CR1) Bits(mask CR1_Bits) CR1_Bits { return CR1_Bits(r.U32.Bits(uint32(mask))) }
func (r *CR1) StoreBits(mask, b CR1_Bits)  { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *CR1) SetBits(mask CR1_Bits)       { r.U32.SetBits(uint32(mask)) }
func (r *CR1) ClearBits(mask CR1_Bits)     { r.U32.ClearBits(uint32(mask)) }
func (r *CR1) Load() CR1_Bits              { return CR1_Bits(r.U32.Load()) }
func (r *CR1) Store(b CR1_Bits)            { r.U32.Store(uint32(b)) }

type CR1_Mask struct{ mmio.UM32 }

func (rm CR1_Mask) Load() CR1_Bits   { return CR1_Bits(rm.UM32.Load()) }
func (rm CR1_Mask) Store(b CR1_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) LPR() CR1_Mask {
	return CR1_Mask{mmio.UM32{&p.CR1.U32, uint32(LPR)}}
}

func (p *PWR_Periph) VOS() CR1_Mask {
	return CR1_Mask{mmio.UM32{&p.CR1.U32, uint32(VOS)}}
}

func (p *PWR_Periph) DBP() CR1_Mask {
	return CR1_Mask{mmio.UM32{&p.CR1.U32, uint32(DBP)}}
}

func (p *PWR_Periph) LPMS() CR1_Mask {
	return CR1_Mask{mmio.UM32{&p.CR1.U32, uint32(LPMS)}}
}

type CR2_Bits uint32

func (b CR2_Bits) Field(mask CR2_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask CR2_Bits) J(v int) CR2_Bits {
	return CR2_Bits(bits.Make32(v, uint32(mask)))
}

type CR2 struct{ mmio.U32 }

func (r *CR2) Bits(mask CR2_Bits) CR2_Bits { return CR2_Bits(r.U32.Bits(uint32(mask))) }
func (r *CR2) StoreBits(mask, b CR2_Bits)  { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *CR2) SetBits(mask CR2_Bits)       { r.U32.SetBits(uint32(mask)) }
func (r *CR2) ClearBits(mask CR2_Bits)     { r.U32.ClearBits(uint32(mask)) }
func (r *CR2) Load() CR2_Bits              { return CR2_Bits(r.U32.Load()) }
func (r *CR2) Store(b CR2_Bits)            { r.U32.Store(uint32(b)) }

type CR2_Mask struct{ mmio.UM32 }

func (rm CR2_Mask) Load() CR2_Bits   { return CR2_Bits(rm.UM32.Load()) }
func (rm CR2_Mask) Store(b CR2_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) USV() CR2_Mask {
	return CR2_Mask{mmio.UM32{&p.CR2.U32, uint32(USV)}}
}

func (p *PWR_Periph) IOSV() CR2_Mask {
	return CR2_Mask{mmio.UM32{&p.CR2.U32, uint32(IOSV)}}
}

func (p *PWR_Periph) PVME() CR2_Mask {
	return CR2_Mask{mmio.UM32{&p.CR2.U32, uint32(PVME)}}
}

func (p *PWR_Periph) PLS() CR2_Mask {
	return CR2_Mask{mmio.UM32{&p.CR2.U32, uint32(PLS)}}
}

func (p *PWR_Periph) PVDE() CR2_Mask {
	return CR2_Mask{mmio.UM32{&p.CR2.U32, uint32(PVDE)}}
}

type CR3_Bits uint32

func (b CR3_Bits) Field(mask CR3_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask CR3_Bits) J(v int) CR3_Bits {
	return CR3_Bits(bits.Make32(v, uint32(mask)))
}

type CR3 struct{ mmio.U32 }

func (r *CR3) Bits(mask CR3_Bits) CR3_Bits { return CR3_Bits(r.U32.Bits(uint32(mask))) }
func (r *CR3) StoreBits(mask, b CR3_Bits)  { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *CR3) SetBits(mask CR3_Bits)       { r.U32.SetBits(uint32(mask)) }
func (r *CR3) ClearBits(mask CR3_Bits)     { r.U32.ClearBits(uint32(mask)) }
func (r *CR3) Load() CR3_Bits              { return CR3_Bits(r.U32.Load()) }
func (r *CR3) Store(b CR3_Bits)            { r.U32.Store(uint32(b)) }

type CR3_Mask struct{ mmio.UM32 }

func (rm CR3_Mask) Load() CR3_Bits   { return CR3_Bits(rm.UM32.Load()) }
func (rm CR3_Mask) Store(b CR3_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) EIWF() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(EIWF)}}
}

func (p *PWR_Periph) APC() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(APC)}}
}

func (p *PWR_Periph) RRS() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(RRS)}}
}

func (p *PWR_Periph) EWUP5() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(EWUP5)}}
}

func (p *PWR_Periph) EWUP4() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(EWUP4)}}
}

func (p *PWR_Periph) EWUP3() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(EWUP3)}}
}

func (p *PWR_Periph) EWUP2() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(EWUP2)}}
}

func (p *PWR_Periph) EWUP1() CR3_Mask {
	return CR3_Mask{mmio.UM32{&p.CR3.U32, uint32(EWUP1)}}
}

type CR4_Bits uint32

func (b CR4_Bits) Field(mask CR4_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask CR4_Bits) J(v int) CR4_Bits {
	return CR4_Bits(bits.Make32(v, uint32(mask)))
}

type CR4 struct{ mmio.U32 }

func (r *CR4) Bits(mask CR4_Bits) CR4_Bits { return CR4_Bits(r.U32.Bits(uint32(mask))) }
func (r *CR4) StoreBits(mask, b CR4_Bits)  { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *CR4) SetBits(mask CR4_Bits)       { r.U32.SetBits(uint32(mask)) }
func (r *CR4) ClearBits(mask CR4_Bits)     { r.U32.ClearBits(uint32(mask)) }
func (r *CR4) Load() CR4_Bits              { return CR4_Bits(r.U32.Load()) }
func (r *CR4) Store(b CR4_Bits)            { r.U32.Store(uint32(b)) }

type CR4_Mask struct{ mmio.UM32 }

func (rm CR4_Mask) Load() CR4_Bits   { return CR4_Bits(rm.UM32.Load()) }
func (rm CR4_Mask) Store(b CR4_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) VBRS() CR4_Mask {
	return CR4_Mask{mmio.UM32{&p.CR4.U32, uint32(VBRS)}}
}

func (p *PWR_Periph) VBE() CR4_Mask {
	return CR4_Mask{mmio.UM32{&p.CR4.U32, uint32(VBE)}}
}

func (p *PWR_Periph) WP5() CR4_Mask {
	return CR4_Mask{mmio.UM32{&p.CR4.U32, uint32(WP5)}}
}

func (p *PWR_Periph) WP4() CR4_Mask {
	return CR4_Mask{mmio.UM32{&p.CR4.U32, uint32(WP4)}}
}

func (p *PWR_Periph) WP3() CR4_Mask {
	return CR4_Mask{mmio.UM32{&p.CR4.U32, uint32(WP3)}}
}

func (p *PWR_Periph) WP2() CR4_Mask {
	return CR4_Mask{mmio.UM32{&p.CR4.U32, uint32(WP2)}}
}

func (p *PWR_Periph) WP1() CR4_Mask {
	return CR4_Mask{mmio.UM32{&p.CR4.U32, uint32(WP1)}}
}

type SR1_Bits uint32

func (b SR1_Bits) Field(mask SR1_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask SR1_Bits) J(v int) SR1_Bits {
	return SR1_Bits(bits.Make32(v, uint32(mask)))
}

type SR1 struct{ mmio.U32 }

func (r *SR1) Bits(mask SR1_Bits) SR1_Bits { return SR1_Bits(r.U32.Bits(uint32(mask))) }
func (r *SR1) StoreBits(mask, b SR1_Bits)  { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *SR1) SetBits(mask SR1_Bits)       { r.U32.SetBits(uint32(mask)) }
func (r *SR1) ClearBits(mask SR1_Bits)     { r.U32.ClearBits(uint32(mask)) }
func (r *SR1) Load() SR1_Bits              { return SR1_Bits(r.U32.Load()) }
func (r *SR1) Store(b SR1_Bits)            { r.U32.Store(uint32(b)) }

type SR1_Mask struct{ mmio.UM32 }

func (rm SR1_Mask) Load() SR1_Bits   { return SR1_Bits(rm.UM32.Load()) }
func (rm SR1_Mask) Store(b SR1_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) WUFI() SR1_Mask {
	return SR1_Mask{mmio.UM32{&p.SR1.U32, uint32(WUFI)}}
}

func (p *PWR_Periph) SBF() SR1_Mask {
	return SR1_Mask{mmio.UM32{&p.SR1.U32, uint32(SBF)}}
}

func (p *PWR_Periph) WUF() SR1_Mask {
	return SR1_Mask{mmio.UM32{&p.SR1.U32, uint32(WUF)}}
}

type SR2_Bits uint32

func (b SR2_Bits) Field(mask SR2_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask SR2_Bits) J(v int) SR2_Bits {
	return SR2_Bits(bits.Make32(v, uint32(mask)))
}

type SR2 struct{ mmio.U32 }

func (r *SR2) Bits(mask SR2_Bits) SR2_Bits { return SR2_Bits(r.U32.Bits(uint32(mask))) }
func (r *SR2) StoreBits(mask, b SR2_Bits)  { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *SR2) SetBits(mask SR2_Bits)       { r.U32.SetBits(uint32(mask)) }
func (r *SR2) ClearBits(mask SR2_Bits)     { r.U32.ClearBits(uint32(mask)) }
func (r *SR2) Load() SR2_Bits              { return SR2_Bits(r.U32.Load()) }
func (r *SR2) Store(b SR2_Bits)            { r.U32.Store(uint32(b)) }

type SR2_Mask struct{ mmio.UM32 }

func (rm SR2_Mask) Load() SR2_Bits   { return SR2_Bits(rm.UM32.Load()) }
func (rm SR2_Mask) Store(b SR2_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PVMO4() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(PVMO4)}}
}

func (p *PWR_Periph) PVMO3() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(PVMO3)}}
}

func (p *PWR_Periph) PVMO2() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(PVMO2)}}
}

func (p *PWR_Periph) PVMO1() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(PVMO1)}}
}

func (p *PWR_Periph) PVDO() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(PVDO)}}
}

func (p *PWR_Periph) VOSF() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(VOSF)}}
}

func (p *PWR_Periph) REGLPF() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(REGLPF)}}
}

func (p *PWR_Periph) REGLPS() SR2_Mask {
	return SR2_Mask{mmio.UM32{&p.SR2.U32, uint32(REGLPS)}}
}

type SCR_Bits uint32

func (b SCR_Bits) Field(mask SCR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask SCR_Bits) J(v int) SCR_Bits {
	return SCR_Bits(bits.Make32(v, uint32(mask)))
}

type SCR struct{ mmio.U32 }

func (r *SCR) Bits(mask SCR_Bits) SCR_Bits { return SCR_Bits(r.U32.Bits(uint32(mask))) }
func (r *SCR) StoreBits(mask, b SCR_Bits)  { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *SCR) SetBits(mask SCR_Bits)       { r.U32.SetBits(uint32(mask)) }
func (r *SCR) ClearBits(mask SCR_Bits)     { r.U32.ClearBits(uint32(mask)) }
func (r *SCR) Load() SCR_Bits              { return SCR_Bits(r.U32.Load()) }
func (r *SCR) Store(b SCR_Bits)            { r.U32.Store(uint32(b)) }

type SCR_Mask struct{ mmio.UM32 }

func (rm SCR_Mask) Load() SCR_Bits   { return SCR_Bits(rm.UM32.Load()) }
func (rm SCR_Mask) Store(b SCR_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) CSBF() SCR_Mask {
	return SCR_Mask{mmio.UM32{&p.SCR.U32, uint32(CSBF)}}
}

func (p *PWR_Periph) CWUF() SCR_Mask {
	return SCR_Mask{mmio.UM32{&p.SCR.U32, uint32(CWUF)}}
}

type PUCRA_Bits uint32

func (b PUCRA_Bits) Field(mask PUCRA_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRA_Bits) J(v int) PUCRA_Bits {
	return PUCRA_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRA struct{ mmio.U32 }

func (r *PUCRA) Bits(mask PUCRA_Bits) PUCRA_Bits { return PUCRA_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRA) StoreBits(mask, b PUCRA_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRA) SetBits(mask PUCRA_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRA) ClearBits(mask PUCRA_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRA) Load() PUCRA_Bits                { return PUCRA_Bits(r.U32.Load()) }
func (r *PUCRA) Store(b PUCRA_Bits)              { r.U32.Store(uint32(b)) }

type PUCRA_Mask struct{ mmio.UM32 }

func (rm PUCRA_Mask) Load() PUCRA_Bits   { return PUCRA_Bits(rm.UM32.Load()) }
func (rm PUCRA_Mask) Store(b PUCRA_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PA15() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA15)}}
}

func (p *PWR_Periph) PA13() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA13)}}
}

func (p *PWR_Periph) PA12() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA12)}}
}

func (p *PWR_Periph) PA11() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA11)}}
}

func (p *PWR_Periph) PA10() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA10)}}
}

func (p *PWR_Periph) PA9() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA9)}}
}

func (p *PWR_Periph) PA8() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA8)}}
}

func (p *PWR_Periph) PA7() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA7)}}
}

func (p *PWR_Periph) PA6() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA6)}}
}

func (p *PWR_Periph) PA5() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA5)}}
}

func (p *PWR_Periph) PA4() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA4)}}
}

func (p *PWR_Periph) PA3() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA3)}}
}

func (p *PWR_Periph) PA2() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA2)}}
}

func (p *PWR_Periph) PA1() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA1)}}
}

func (p *PWR_Periph) PA0() PUCRA_Mask {
	return PUCRA_Mask{mmio.UM32{&p.PUCRA.U32, uint32(PA0)}}
}

type PDCRA_Bits uint32

func (b PDCRA_Bits) Field(mask PDCRA_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRA_Bits) J(v int) PDCRA_Bits {
	return PDCRA_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRA struct{ mmio.U32 }

func (r *PDCRA) Bits(mask PDCRA_Bits) PDCRA_Bits { return PDCRA_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRA) StoreBits(mask, b PDCRA_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRA) SetBits(mask PDCRA_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRA) ClearBits(mask PDCRA_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRA) Load() PDCRA_Bits                { return PDCRA_Bits(r.U32.Load()) }
func (r *PDCRA) Store(b PDCRA_Bits)              { r.U32.Store(uint32(b)) }

type PDCRA_Mask struct{ mmio.UM32 }

func (rm PDCRA_Mask) Load() PDCRA_Bits   { return PDCRA_Bits(rm.UM32.Load()) }
func (rm PDCRA_Mask) Store(b PDCRA_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PA14() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA14)}}
}

func (p *PWR_Periph) PA12() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA12)}}
}

func (p *PWR_Periph) PA11() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA11)}}
}

func (p *PWR_Periph) PA10() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA10)}}
}

func (p *PWR_Periph) PA9() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA9)}}
}

func (p *PWR_Periph) PA8() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA8)}}
}

func (p *PWR_Periph) PA7() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA7)}}
}

func (p *PWR_Periph) PA6() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA6)}}
}

func (p *PWR_Periph) PA5() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA5)}}
}

func (p *PWR_Periph) PA4() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA4)}}
}

func (p *PWR_Periph) PA3() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA3)}}
}

func (p *PWR_Periph) PA2() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA2)}}
}

func (p *PWR_Periph) PA1() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA1)}}
}

func (p *PWR_Periph) PA0() PDCRA_Mask {
	return PDCRA_Mask{mmio.UM32{&p.PDCRA.U32, uint32(PA0)}}
}

type PUCRB_Bits uint32

func (b PUCRB_Bits) Field(mask PUCRB_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRB_Bits) J(v int) PUCRB_Bits {
	return PUCRB_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRB struct{ mmio.U32 }

func (r *PUCRB) Bits(mask PUCRB_Bits) PUCRB_Bits { return PUCRB_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRB) StoreBits(mask, b PUCRB_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRB) SetBits(mask PUCRB_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRB) ClearBits(mask PUCRB_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRB) Load() PUCRB_Bits                { return PUCRB_Bits(r.U32.Load()) }
func (r *PUCRB) Store(b PUCRB_Bits)              { r.U32.Store(uint32(b)) }

type PUCRB_Mask struct{ mmio.UM32 }

func (rm PUCRB_Mask) Load() PUCRB_Bits   { return PUCRB_Bits(rm.UM32.Load()) }
func (rm PUCRB_Mask) Store(b PUCRB_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PB15() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB15)}}
}

func (p *PWR_Periph) PB14() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB14)}}
}

func (p *PWR_Periph) PB13() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB13)}}
}

func (p *PWR_Periph) PB12() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB12)}}
}

func (p *PWR_Periph) PB11() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB11)}}
}

func (p *PWR_Periph) PB10() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB10)}}
}

func (p *PWR_Periph) PB9() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB9)}}
}

func (p *PWR_Periph) PB8() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB8)}}
}

func (p *PWR_Periph) PB7() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB7)}}
}

func (p *PWR_Periph) PB6() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB6)}}
}

func (p *PWR_Periph) PB5() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB5)}}
}

func (p *PWR_Periph) PB4() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB4)}}
}

func (p *PWR_Periph) PB3() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB3)}}
}

func (p *PWR_Periph) PB2() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB2)}}
}

func (p *PWR_Periph) PB1() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB1)}}
}

func (p *PWR_Periph) PB0() PUCRB_Mask {
	return PUCRB_Mask{mmio.UM32{&p.PUCRB.U32, uint32(PB0)}}
}

type PDCRB_Bits uint32

func (b PDCRB_Bits) Field(mask PDCRB_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRB_Bits) J(v int) PDCRB_Bits {
	return PDCRB_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRB struct{ mmio.U32 }

func (r *PDCRB) Bits(mask PDCRB_Bits) PDCRB_Bits { return PDCRB_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRB) StoreBits(mask, b PDCRB_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRB) SetBits(mask PDCRB_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRB) ClearBits(mask PDCRB_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRB) Load() PDCRB_Bits                { return PDCRB_Bits(r.U32.Load()) }
func (r *PDCRB) Store(b PDCRB_Bits)              { r.U32.Store(uint32(b)) }

type PDCRB_Mask struct{ mmio.UM32 }

func (rm PDCRB_Mask) Load() PDCRB_Bits   { return PDCRB_Bits(rm.UM32.Load()) }
func (rm PDCRB_Mask) Store(b PDCRB_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PB15() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB15)}}
}

func (p *PWR_Periph) PB14() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB14)}}
}

func (p *PWR_Periph) PB13() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB13)}}
}

func (p *PWR_Periph) PB12() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB12)}}
}

func (p *PWR_Periph) PB11() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB11)}}
}

func (p *PWR_Periph) PB10() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB10)}}
}

func (p *PWR_Periph) PB9() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB9)}}
}

func (p *PWR_Periph) PB8() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB8)}}
}

func (p *PWR_Periph) PB7() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB7)}}
}

func (p *PWR_Periph) PB6() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB6)}}
}

func (p *PWR_Periph) PB5() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB5)}}
}

func (p *PWR_Periph) PB3() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB3)}}
}

func (p *PWR_Periph) PB2() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB2)}}
}

func (p *PWR_Periph) PB1() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB1)}}
}

func (p *PWR_Periph) PB0() PDCRB_Mask {
	return PDCRB_Mask{mmio.UM32{&p.PDCRB.U32, uint32(PB0)}}
}

type PUCRC_Bits uint32

func (b PUCRC_Bits) Field(mask PUCRC_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRC_Bits) J(v int) PUCRC_Bits {
	return PUCRC_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRC struct{ mmio.U32 }

func (r *PUCRC) Bits(mask PUCRC_Bits) PUCRC_Bits { return PUCRC_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRC) StoreBits(mask, b PUCRC_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRC) SetBits(mask PUCRC_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRC) ClearBits(mask PUCRC_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRC) Load() PUCRC_Bits                { return PUCRC_Bits(r.U32.Load()) }
func (r *PUCRC) Store(b PUCRC_Bits)              { r.U32.Store(uint32(b)) }

type PUCRC_Mask struct{ mmio.UM32 }

func (rm PUCRC_Mask) Load() PUCRC_Bits   { return PUCRC_Bits(rm.UM32.Load()) }
func (rm PUCRC_Mask) Store(b PUCRC_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PC15() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC15)}}
}

func (p *PWR_Periph) PC14() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC14)}}
}

func (p *PWR_Periph) PC13() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC13)}}
}

func (p *PWR_Periph) PC12() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC12)}}
}

func (p *PWR_Periph) PC11() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC11)}}
}

func (p *PWR_Periph) PC10() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC10)}}
}

func (p *PWR_Periph) PC9() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC9)}}
}

func (p *PWR_Periph) PC8() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC8)}}
}

func (p *PWR_Periph) PC7() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC7)}}
}

func (p *PWR_Periph) PC6() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC6)}}
}

func (p *PWR_Periph) PC5() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC5)}}
}

func (p *PWR_Periph) PC4() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC4)}}
}

func (p *PWR_Periph) PC3() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC3)}}
}

func (p *PWR_Periph) PC2() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC2)}}
}

func (p *PWR_Periph) PC1() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC1)}}
}

func (p *PWR_Periph) PC0() PUCRC_Mask {
	return PUCRC_Mask{mmio.UM32{&p.PUCRC.U32, uint32(PC0)}}
}

type PDCRC_Bits uint32

func (b PDCRC_Bits) Field(mask PDCRC_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRC_Bits) J(v int) PDCRC_Bits {
	return PDCRC_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRC struct{ mmio.U32 }

func (r *PDCRC) Bits(mask PDCRC_Bits) PDCRC_Bits { return PDCRC_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRC) StoreBits(mask, b PDCRC_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRC) SetBits(mask PDCRC_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRC) ClearBits(mask PDCRC_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRC) Load() PDCRC_Bits                { return PDCRC_Bits(r.U32.Load()) }
func (r *PDCRC) Store(b PDCRC_Bits)              { r.U32.Store(uint32(b)) }

type PDCRC_Mask struct{ mmio.UM32 }

func (rm PDCRC_Mask) Load() PDCRC_Bits   { return PDCRC_Bits(rm.UM32.Load()) }
func (rm PDCRC_Mask) Store(b PDCRC_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PC15() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC15)}}
}

func (p *PWR_Periph) PC14() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC14)}}
}

func (p *PWR_Periph) PC13() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC13)}}
}

func (p *PWR_Periph) PC12() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC12)}}
}

func (p *PWR_Periph) PC11() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC11)}}
}

func (p *PWR_Periph) PC10() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC10)}}
}

func (p *PWR_Periph) PC9() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC9)}}
}

func (p *PWR_Periph) PC8() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC8)}}
}

func (p *PWR_Periph) PC7() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC7)}}
}

func (p *PWR_Periph) PC6() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC6)}}
}

func (p *PWR_Periph) PC5() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC5)}}
}

func (p *PWR_Periph) PC4() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC4)}}
}

func (p *PWR_Periph) PC3() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC3)}}
}

func (p *PWR_Periph) PC2() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC2)}}
}

func (p *PWR_Periph) PC1() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC1)}}
}

func (p *PWR_Periph) PC0() PDCRC_Mask {
	return PDCRC_Mask{mmio.UM32{&p.PDCRC.U32, uint32(PC0)}}
}

type PUCRD_Bits uint32

func (b PUCRD_Bits) Field(mask PUCRD_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRD_Bits) J(v int) PUCRD_Bits {
	return PUCRD_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRD struct{ mmio.U32 }

func (r *PUCRD) Bits(mask PUCRD_Bits) PUCRD_Bits { return PUCRD_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRD) StoreBits(mask, b PUCRD_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRD) SetBits(mask PUCRD_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRD) ClearBits(mask PUCRD_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRD) Load() PUCRD_Bits                { return PUCRD_Bits(r.U32.Load()) }
func (r *PUCRD) Store(b PUCRD_Bits)              { r.U32.Store(uint32(b)) }

type PUCRD_Mask struct{ mmio.UM32 }

func (rm PUCRD_Mask) Load() PUCRD_Bits   { return PUCRD_Bits(rm.UM32.Load()) }
func (rm PUCRD_Mask) Store(b PUCRD_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PD15() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD15)}}
}

func (p *PWR_Periph) PD14() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD14)}}
}

func (p *PWR_Periph) PD13() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD13)}}
}

func (p *PWR_Periph) PD12() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD12)}}
}

func (p *PWR_Periph) PD11() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD11)}}
}

func (p *PWR_Periph) PD10() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD10)}}
}

func (p *PWR_Periph) PD9() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD9)}}
}

func (p *PWR_Periph) PD8() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD8)}}
}

func (p *PWR_Periph) PD7() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD7)}}
}

func (p *PWR_Periph) PD6() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD6)}}
}

func (p *PWR_Periph) PD5() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD5)}}
}

func (p *PWR_Periph) PD4() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD4)}}
}

func (p *PWR_Periph) PD3() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD3)}}
}

func (p *PWR_Periph) PD2() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD2)}}
}

func (p *PWR_Periph) PD1() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD1)}}
}

func (p *PWR_Periph) PD0() PUCRD_Mask {
	return PUCRD_Mask{mmio.UM32{&p.PUCRD.U32, uint32(PD0)}}
}

type PDCRD_Bits uint32

func (b PDCRD_Bits) Field(mask PDCRD_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRD_Bits) J(v int) PDCRD_Bits {
	return PDCRD_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRD struct{ mmio.U32 }

func (r *PDCRD) Bits(mask PDCRD_Bits) PDCRD_Bits { return PDCRD_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRD) StoreBits(mask, b PDCRD_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRD) SetBits(mask PDCRD_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRD) ClearBits(mask PDCRD_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRD) Load() PDCRD_Bits                { return PDCRD_Bits(r.U32.Load()) }
func (r *PDCRD) Store(b PDCRD_Bits)              { r.U32.Store(uint32(b)) }

type PDCRD_Mask struct{ mmio.UM32 }

func (rm PDCRD_Mask) Load() PDCRD_Bits   { return PDCRD_Bits(rm.UM32.Load()) }
func (rm PDCRD_Mask) Store(b PDCRD_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PD15() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD15)}}
}

func (p *PWR_Periph) PD14() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD14)}}
}

func (p *PWR_Periph) PD13() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD13)}}
}

func (p *PWR_Periph) PD12() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD12)}}
}

func (p *PWR_Periph) PD11() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD11)}}
}

func (p *PWR_Periph) PD10() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD10)}}
}

func (p *PWR_Periph) PD9() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD9)}}
}

func (p *PWR_Periph) PD8() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD8)}}
}

func (p *PWR_Periph) PD7() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD7)}}
}

func (p *PWR_Periph) PD6() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD6)}}
}

func (p *PWR_Periph) PD5() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD5)}}
}

func (p *PWR_Periph) PD4() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD4)}}
}

func (p *PWR_Periph) PD3() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD3)}}
}

func (p *PWR_Periph) PD2() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD2)}}
}

func (p *PWR_Periph) PD1() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD1)}}
}

func (p *PWR_Periph) PD0() PDCRD_Mask {
	return PDCRD_Mask{mmio.UM32{&p.PDCRD.U32, uint32(PD0)}}
}

type PUCRE_Bits uint32

func (b PUCRE_Bits) Field(mask PUCRE_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRE_Bits) J(v int) PUCRE_Bits {
	return PUCRE_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRE struct{ mmio.U32 }

func (r *PUCRE) Bits(mask PUCRE_Bits) PUCRE_Bits { return PUCRE_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRE) StoreBits(mask, b PUCRE_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRE) SetBits(mask PUCRE_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRE) ClearBits(mask PUCRE_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRE) Load() PUCRE_Bits                { return PUCRE_Bits(r.U32.Load()) }
func (r *PUCRE) Store(b PUCRE_Bits)              { r.U32.Store(uint32(b)) }

type PUCRE_Mask struct{ mmio.UM32 }

func (rm PUCRE_Mask) Load() PUCRE_Bits   { return PUCRE_Bits(rm.UM32.Load()) }
func (rm PUCRE_Mask) Store(b PUCRE_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PE15() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE15)}}
}

func (p *PWR_Periph) PE14() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE14)}}
}

func (p *PWR_Periph) PE13() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE13)}}
}

func (p *PWR_Periph) PE12() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE12)}}
}

func (p *PWR_Periph) PE11() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE11)}}
}

func (p *PWR_Periph) PE10() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE10)}}
}

func (p *PWR_Periph) PE9() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE9)}}
}

func (p *PWR_Periph) PE8() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE8)}}
}

func (p *PWR_Periph) PE7() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE7)}}
}

func (p *PWR_Periph) PE6() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE6)}}
}

func (p *PWR_Periph) PE5() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE5)}}
}

func (p *PWR_Periph) PE4() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE4)}}
}

func (p *PWR_Periph) PE3() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE3)}}
}

func (p *PWR_Periph) PE2() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE2)}}
}

func (p *PWR_Periph) PE1() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE1)}}
}

func (p *PWR_Periph) PE0() PUCRE_Mask {
	return PUCRE_Mask{mmio.UM32{&p.PUCRE.U32, uint32(PE0)}}
}

type PDCRE_Bits uint32

func (b PDCRE_Bits) Field(mask PDCRE_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRE_Bits) J(v int) PDCRE_Bits {
	return PDCRE_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRE struct{ mmio.U32 }

func (r *PDCRE) Bits(mask PDCRE_Bits) PDCRE_Bits { return PDCRE_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRE) StoreBits(mask, b PDCRE_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRE) SetBits(mask PDCRE_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRE) ClearBits(mask PDCRE_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRE) Load() PDCRE_Bits                { return PDCRE_Bits(r.U32.Load()) }
func (r *PDCRE) Store(b PDCRE_Bits)              { r.U32.Store(uint32(b)) }

type PDCRE_Mask struct{ mmio.UM32 }

func (rm PDCRE_Mask) Load() PDCRE_Bits   { return PDCRE_Bits(rm.UM32.Load()) }
func (rm PDCRE_Mask) Store(b PDCRE_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PE15() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE15)}}
}

func (p *PWR_Periph) PE14() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE14)}}
}

func (p *PWR_Periph) PE13() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE13)}}
}

func (p *PWR_Periph) PE12() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE12)}}
}

func (p *PWR_Periph) PE11() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE11)}}
}

func (p *PWR_Periph) PE10() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE10)}}
}

func (p *PWR_Periph) PE9() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE9)}}
}

func (p *PWR_Periph) PE8() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE8)}}
}

func (p *PWR_Periph) PE7() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE7)}}
}

func (p *PWR_Periph) PE6() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE6)}}
}

func (p *PWR_Periph) PE5() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE5)}}
}

func (p *PWR_Periph) PE4() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE4)}}
}

func (p *PWR_Periph) PE3() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE3)}}
}

func (p *PWR_Periph) PE2() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE2)}}
}

func (p *PWR_Periph) PE1() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE1)}}
}

func (p *PWR_Periph) PE0() PDCRE_Mask {
	return PDCRE_Mask{mmio.UM32{&p.PDCRE.U32, uint32(PE0)}}
}

type PUCRF_Bits uint32

func (b PUCRF_Bits) Field(mask PUCRF_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRF_Bits) J(v int) PUCRF_Bits {
	return PUCRF_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRF struct{ mmio.U32 }

func (r *PUCRF) Bits(mask PUCRF_Bits) PUCRF_Bits { return PUCRF_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRF) StoreBits(mask, b PUCRF_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRF) SetBits(mask PUCRF_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRF) ClearBits(mask PUCRF_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRF) Load() PUCRF_Bits                { return PUCRF_Bits(r.U32.Load()) }
func (r *PUCRF) Store(b PUCRF_Bits)              { r.U32.Store(uint32(b)) }

type PUCRF_Mask struct{ mmio.UM32 }

func (rm PUCRF_Mask) Load() PUCRF_Bits   { return PUCRF_Bits(rm.UM32.Load()) }
func (rm PUCRF_Mask) Store(b PUCRF_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PF15() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF15)}}
}

func (p *PWR_Periph) PF14() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF14)}}
}

func (p *PWR_Periph) PF13() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF13)}}
}

func (p *PWR_Periph) PF12() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF12)}}
}

func (p *PWR_Periph) PF11() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF11)}}
}

func (p *PWR_Periph) PF10() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF10)}}
}

func (p *PWR_Periph) PF9() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF9)}}
}

func (p *PWR_Periph) PF8() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF8)}}
}

func (p *PWR_Periph) PF7() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF7)}}
}

func (p *PWR_Periph) PF6() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF6)}}
}

func (p *PWR_Periph) PF5() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF5)}}
}

func (p *PWR_Periph) PF4() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF4)}}
}

func (p *PWR_Periph) PF3() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF3)}}
}

func (p *PWR_Periph) PF2() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF2)}}
}

func (p *PWR_Periph) PF1() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF1)}}
}

func (p *PWR_Periph) PF0() PUCRF_Mask {
	return PUCRF_Mask{mmio.UM32{&p.PUCRF.U32, uint32(PF0)}}
}

type PDCRF_Bits uint32

func (b PDCRF_Bits) Field(mask PDCRF_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRF_Bits) J(v int) PDCRF_Bits {
	return PDCRF_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRF struct{ mmio.U32 }

func (r *PDCRF) Bits(mask PDCRF_Bits) PDCRF_Bits { return PDCRF_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRF) StoreBits(mask, b PDCRF_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRF) SetBits(mask PDCRF_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRF) ClearBits(mask PDCRF_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRF) Load() PDCRF_Bits                { return PDCRF_Bits(r.U32.Load()) }
func (r *PDCRF) Store(b PDCRF_Bits)              { r.U32.Store(uint32(b)) }

type PDCRF_Mask struct{ mmio.UM32 }

func (rm PDCRF_Mask) Load() PDCRF_Bits   { return PDCRF_Bits(rm.UM32.Load()) }
func (rm PDCRF_Mask) Store(b PDCRF_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PF15() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF15)}}
}

func (p *PWR_Periph) PF14() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF14)}}
}

func (p *PWR_Periph) PF13() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF13)}}
}

func (p *PWR_Periph) PF12() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF12)}}
}

func (p *PWR_Periph) PF11() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF11)}}
}

func (p *PWR_Periph) PF10() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF10)}}
}

func (p *PWR_Periph) PF9() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF9)}}
}

func (p *PWR_Periph) PF8() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF8)}}
}

func (p *PWR_Periph) PF7() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF7)}}
}

func (p *PWR_Periph) PF6() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF6)}}
}

func (p *PWR_Periph) PF5() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF5)}}
}

func (p *PWR_Periph) PF4() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF4)}}
}

func (p *PWR_Periph) PF3() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF3)}}
}

func (p *PWR_Periph) PF2() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF2)}}
}

func (p *PWR_Periph) PF1() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF1)}}
}

func (p *PWR_Periph) PF0() PDCRF_Mask {
	return PDCRF_Mask{mmio.UM32{&p.PDCRF.U32, uint32(PF0)}}
}

type PUCRG_Bits uint32

func (b PUCRG_Bits) Field(mask PUCRG_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRG_Bits) J(v int) PUCRG_Bits {
	return PUCRG_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRG struct{ mmio.U32 }

func (r *PUCRG) Bits(mask PUCRG_Bits) PUCRG_Bits { return PUCRG_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRG) StoreBits(mask, b PUCRG_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRG) SetBits(mask PUCRG_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRG) ClearBits(mask PUCRG_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRG) Load() PUCRG_Bits                { return PUCRG_Bits(r.U32.Load()) }
func (r *PUCRG) Store(b PUCRG_Bits)              { r.U32.Store(uint32(b)) }

type PUCRG_Mask struct{ mmio.UM32 }

func (rm PUCRG_Mask) Load() PUCRG_Bits   { return PUCRG_Bits(rm.UM32.Load()) }
func (rm PUCRG_Mask) Store(b PUCRG_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PG15() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG15)}}
}

func (p *PWR_Periph) PG14() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG14)}}
}

func (p *PWR_Periph) PG13() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG13)}}
}

func (p *PWR_Periph) PG12() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG12)}}
}

func (p *PWR_Periph) PG11() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG11)}}
}

func (p *PWR_Periph) PG10() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG10)}}
}

func (p *PWR_Periph) PG9() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG9)}}
}

func (p *PWR_Periph) PG8() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG8)}}
}

func (p *PWR_Periph) PG7() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG7)}}
}

func (p *PWR_Periph) PG6() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG6)}}
}

func (p *PWR_Periph) PG5() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG5)}}
}

func (p *PWR_Periph) PG4() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG4)}}
}

func (p *PWR_Periph) PG3() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG3)}}
}

func (p *PWR_Periph) PG2() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG2)}}
}

func (p *PWR_Periph) PG1() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG1)}}
}

func (p *PWR_Periph) PG0() PUCRG_Mask {
	return PUCRG_Mask{mmio.UM32{&p.PUCRG.U32, uint32(PG0)}}
}

type PDCRG_Bits uint32

func (b PDCRG_Bits) Field(mask PDCRG_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRG_Bits) J(v int) PDCRG_Bits {
	return PDCRG_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRG struct{ mmio.U32 }

func (r *PDCRG) Bits(mask PDCRG_Bits) PDCRG_Bits { return PDCRG_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRG) StoreBits(mask, b PDCRG_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRG) SetBits(mask PDCRG_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRG) ClearBits(mask PDCRG_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRG) Load() PDCRG_Bits                { return PDCRG_Bits(r.U32.Load()) }
func (r *PDCRG) Store(b PDCRG_Bits)              { r.U32.Store(uint32(b)) }

type PDCRG_Mask struct{ mmio.UM32 }

func (rm PDCRG_Mask) Load() PDCRG_Bits   { return PDCRG_Bits(rm.UM32.Load()) }
func (rm PDCRG_Mask) Store(b PDCRG_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PG15() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG15)}}
}

func (p *PWR_Periph) PG14() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG14)}}
}

func (p *PWR_Periph) PG13() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG13)}}
}

func (p *PWR_Periph) PG12() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG12)}}
}

func (p *PWR_Periph) PG11() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG11)}}
}

func (p *PWR_Periph) PG10() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG10)}}
}

func (p *PWR_Periph) PG9() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG9)}}
}

func (p *PWR_Periph) PG8() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG8)}}
}

func (p *PWR_Periph) PG7() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG7)}}
}

func (p *PWR_Periph) PG6() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG6)}}
}

func (p *PWR_Periph) PG5() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG5)}}
}

func (p *PWR_Periph) PG4() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG4)}}
}

func (p *PWR_Periph) PG3() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG3)}}
}

func (p *PWR_Periph) PG2() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG2)}}
}

func (p *PWR_Periph) PG1() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG1)}}
}

func (p *PWR_Periph) PG0() PDCRG_Mask {
	return PDCRG_Mask{mmio.UM32{&p.PDCRG.U32, uint32(PG0)}}
}

type PUCRH_Bits uint32

func (b PUCRH_Bits) Field(mask PUCRH_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PUCRH_Bits) J(v int) PUCRH_Bits {
	return PUCRH_Bits(bits.Make32(v, uint32(mask)))
}

type PUCRH struct{ mmio.U32 }

func (r *PUCRH) Bits(mask PUCRH_Bits) PUCRH_Bits { return PUCRH_Bits(r.U32.Bits(uint32(mask))) }
func (r *PUCRH) StoreBits(mask, b PUCRH_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PUCRH) SetBits(mask PUCRH_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PUCRH) ClearBits(mask PUCRH_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PUCRH) Load() PUCRH_Bits                { return PUCRH_Bits(r.U32.Load()) }
func (r *PUCRH) Store(b PUCRH_Bits)              { r.U32.Store(uint32(b)) }

type PUCRH_Mask struct{ mmio.UM32 }

func (rm PUCRH_Mask) Load() PUCRH_Bits   { return PUCRH_Bits(rm.UM32.Load()) }
func (rm PUCRH_Mask) Store(b PUCRH_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PH1() PUCRH_Mask {
	return PUCRH_Mask{mmio.UM32{&p.PUCRH.U32, uint32(PH1)}}
}

func (p *PWR_Periph) PH0() PUCRH_Mask {
	return PUCRH_Mask{mmio.UM32{&p.PUCRH.U32, uint32(PH0)}}
}

type PDCRH_Bits uint32

func (b PDCRH_Bits) Field(mask PDCRH_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func (mask PDCRH_Bits) J(v int) PDCRH_Bits {
	return PDCRH_Bits(bits.Make32(v, uint32(mask)))
}

type PDCRH struct{ mmio.U32 }

func (r *PDCRH) Bits(mask PDCRH_Bits) PDCRH_Bits { return PDCRH_Bits(r.U32.Bits(uint32(mask))) }
func (r *PDCRH) StoreBits(mask, b PDCRH_Bits)    { r.U32.StoreBits(uint32(mask), uint32(b)) }
func (r *PDCRH) SetBits(mask PDCRH_Bits)         { r.U32.SetBits(uint32(mask)) }
func (r *PDCRH) ClearBits(mask PDCRH_Bits)       { r.U32.ClearBits(uint32(mask)) }
func (r *PDCRH) Load() PDCRH_Bits                { return PDCRH_Bits(r.U32.Load()) }
func (r *PDCRH) Store(b PDCRH_Bits)              { r.U32.Store(uint32(b)) }

type PDCRH_Mask struct{ mmio.UM32 }

func (rm PDCRH_Mask) Load() PDCRH_Bits   { return PDCRH_Bits(rm.UM32.Load()) }
func (rm PDCRH_Mask) Store(b PDCRH_Bits) { rm.UM32.Store(uint32(b)) }

func (p *PWR_Periph) PH1() PDCRH_Mask {
	return PDCRH_Mask{mmio.UM32{&p.PDCRH.U32, uint32(PH1)}}
}

func (p *PWR_Periph) PH0() PDCRH_Mask {
	return PDCRH_Mask{mmio.UM32{&p.PDCRH.U32, uint32(PH0)}}
}
