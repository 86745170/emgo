package pwr

// DO NOT EDIT THIS FILE. GENERATED BY xgen.

import (
	"bits"
	"mmio"
	"unsafe"
)


func pwr(n uint) *mmio.U32 {
	return &(*[2]mmio.U32)(unsafe.Pointer(uintptr(0x40007000)))[n]
}


type CR_Bits uint32

func (m CR_Bits) Set()           { pwr(0).SetBits(uint32(m)) }
func (m CR_Bits) Clear()         { pwr(0).ClearBits(uint32(m)) }
func (m CR_Bits) Load() uint32   { return pwr(0).Bits(uint32(m)) }
func (m CR_Bits) Store(b uint32) { pwr(0).StoreBits(uint32(m), b) }
func (m CR_Bits) LoadVal() int   { return pwr(0).Field(uint32(m)) }
func (m CR_Bits) StoreVal(v int) { pwr(0).SetField(uint32(m), v) }

func CR_Load() CR_Bits   { return CR_Bits(pwr(0).Load()) }
func CR_Store(b CR_Bits) { pwr(0).Store(uint32(b)) }

func (b CR_Bits) Field(mask CR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func Make_CR(v int, mask CR_Bits) CR_Bits {
	return CR_Bits(bits.Make32(v, uint32(mask)))
}


type CSR_Bits uint32

func (m CSR_Bits) Set()           { pwr(1).SetBits(uint32(m)) }
func (m CSR_Bits) Clear()         { pwr(1).ClearBits(uint32(m)) }
func (m CSR_Bits) Load() uint32   { return pwr(1).Bits(uint32(m)) }
func (m CSR_Bits) Store(b uint32) { pwr(1).StoreBits(uint32(m), b) }
func (m CSR_Bits) LoadVal() int   { return pwr(1).Field(uint32(m)) }
func (m CSR_Bits) StoreVal(v int) { pwr(1).SetField(uint32(m), v) }

func CSR_Load() CSR_Bits   { return CSR_Bits(pwr(1).Load()) }
func CSR_Store(b CSR_Bits) { pwr(1).Store(uint32(b)) }

func (b CSR_Bits) Field(mask CSR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func Make_CSR(v int, mask CSR_Bits) CSR_Bits {
	return CSR_Bits(bits.Make32(v, uint32(mask)))
}

