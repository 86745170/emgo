// Go code:
func Switch(i int) int {
	switch {
	case i+1 < 2:
		i++	
	default:
		i--
	}
	return i
}
// C code:
// decl
int foo$Switch(int i$);
// def
int foo$Switch(int i$) {
	switch(0){case 0:{
		bool tag = true;
		if ((tag == ((i$+1)<2))) {
			++(i$);
			break;
		}
		{
			--(i$);
			break;
		}
	}}
	return i$;
}
// end

// Go code:
func Switch(i int) int {
	switch i {
	case 1:
		return 10
	case 2:
		return 20
	default:
		break
	}
	return 0
}
// C code:
// decl
int foo$Switch(int i$);
// def
int foo$Switch(int i$) {
	switch(0){case 0:{
		int tag = i$;
		if ((tag == 1)) {
			return 10;
			break;
		}
		if ((tag == 2)) {
			return 20;
			break;
		}
		{
			break;
			break;
		}
	}}
	return 0;
}
// end

// Go code:
func Switch(i int) int {
	for i < 10 {
		switch i {
		case 1:
			i += 1
			fallthrough
			
		case 2:
			i += 2
			continue
			
		case 3:
			return i
			
		default:
			break
		}
	}
	return i
}
// C code:
// decl
int foo$Switch(int i$);
// def
int foo$Switch(int i$) {
	for (;(i$<10);) {
		switch(0){case 0:{
			int tag = i$;
			if ((tag == 1)) {
				i$ += 1;
			}
			if ((tag == 2)) {
				i$ += 2;
				continue;
				break;
			}
			if ((tag == 3)) {
				return i$;
				break;
			}
			{
				break;
				break;
			}
		}}
	}
	return i$;
}
// end


// Go code:
func Switch(i *interface{}) bool {
	switch  (*i).(type) {
	case string:
		return false
	case []byte:
		return true
	default:
		return false
	}
	switch v := (*i).(type) {
	case bool:
		return v
	case int:
		return v == 1
	default:
		return false
	}
}
// C code:
// decl
__attribute__((weak)) const
tinfo string$$;
// def
__attribute__((weak)) const
tinfo string$$ = {
	.name = EGSTR("string"),
	.size = 8,
	.kind = String
};
// decl
__attribute__((weak)) const
tinfo byte$$;
// def
__attribute__((weak)) const
tinfo byte$$ = {
	.name = EGSTR("byte"),
	.size = 1,
	.kind = Uint8
};
// decl
__attribute__((weak)) const
tinfo slice$$byte$$;
// def
__attribute__((weak)) const
tinfo *slice$$byte$$00[] = {&byte$$};
__attribute__((weak)) const
tinfo slice$$byte$$ = {
	.name = EGSTR("[]byte"),
	.size = 12,
	.kind = Slice,
	.elem = CSLICE(1, slice$$byte$$00)
};
// decl
__attribute__((weak)) const
tinfo bool$$;
// def
__attribute__((weak)) const
tinfo bool$$ = {
	.name = EGSTR("bool"),
	.size = 1,
	.kind = Bool
};
// decl
__attribute__((weak)) const
tinfo int$$;
// def
__attribute__((weak)) const
tinfo int$$ = {
	.name = EGSTR("int"),
	.size = 4,
	.kind = Int
};
// decl
bool foo$Switch(interface *i$);
// def
bool foo$Switch(interface *i$) {
	switch(0){case 0:{
		interface tag = (*i$);
		if (TINFO(tag) == &string$$) {
			return false;
			break;
		}
		if (TINFO(tag) == &slice$$byte$$) {
			return true;
			break;
		}
		{
			return false;
			break;
		}
	}}
	switch(0){case 0:{
		interface tag = (*i$);
		if (TINFO(tag) == &bool$$) {
			bool v$ = IVAL(tag, bool);
			{
				return v$;
			}
			break;
		}
		if (TINFO(tag) == &int$$) {
			int v$ = IVAL(tag, int);
			{
				return (v$ == 1);
			}
			break;
		}
		{
			interface v$ = tag;
			{
				return false;
			}
			break;
		}
	}}
}
// end