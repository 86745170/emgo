// Go code:
func New() **int{
	return new(*int)
}
// C code:
// decl
int_ **foo$New();
// def
int_ **foo$New() {
	return NEW(int_*);
}
// end

// Go code:
func MakeSli(n int) []*int {
	return make([]*int, n)
}
// C code:
// decl
slice foo$MakeSli(int_ n$);
// def
slice foo$MakeSli(int_ n$) {
	return MAKESLI(int_*, n$);
}
// end

// Go code:
func MakeSli(n int) []*int {
	return make([]*int, n, n)
}
// C code:
// decl
slice foo$MakeSli(int_ n$);
// def
slice foo$MakeSli(int_ n$) {
	return MAKESLIC(int_*, n$, n$);
}
// end

// Go code:
func MakeChan() chan *int {
	return make(chan *int)
}
// C code:
// decl
chan foo$MakeChan();
// def
chan foo$MakeChan() {
	return MAKECHAN(int_*, 0);
}
// end

// Go code:
func MakeChan(n int) chan *int {
	return make(chan *int, n)
}
// C code:
// decl
chan foo$MakeChan(int_ n$);
// def
chan foo$MakeChan(int_ n$) {
	return MAKECHAN(int_*, n$);
}
// end