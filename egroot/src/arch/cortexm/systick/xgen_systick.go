package systick

// DO NOT EDIT THIS FILE. GENERATED BY xgen.

import (
	"bits"
	"mmio"
	"unsafe"
)


func systick(n uint) *mmio.U32 {
	return &(*[4]mmio.U32)(unsafe.Pointer(uintptr(0xE000E010)))[n]
}


type CSR_Bits uint32

func (m CSR_Bits) Set()           { systick(0).SetBits(uint32(m)) }
func (m CSR_Bits) Clear()         { systick(0).ClearBits(uint32(m)) }
func (m CSR_Bits) Load() uint32   { return systick(0).Bits(uint32(m)) }
func (m CSR_Bits) Store(b uint32) { systick(0).StoreBits(uint32(m), b) }
func (m CSR_Bits) LoadVal() int   { return systick(0).Field(uint32(m)) }
func (m CSR_Bits) StoreVal(v int) { systick(0).SetField(uint32(m), v) }

func CSR_Load() CSR_Bits   { return CSR_Bits(systick(0).Load()) }
func CSR_Store(b CSR_Bits) { systick(0).Store(uint32(b)) }

func (b CSR_Bits) Field(mask CSR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func Make_CSR(v int, mask CSR_Bits) CSR_Bits {
	return CSR_Bits(bits.Make32(v, uint32(mask)))
}


type RVR_Bits uint32

func (m RVR_Bits) Set()           { systick(1).SetBits(uint32(m)) }
func (m RVR_Bits) Clear()         { systick(1).ClearBits(uint32(m)) }
func (m RVR_Bits) Load() uint32   { return systick(1).Bits(uint32(m)) }
func (m RVR_Bits) Store(b uint32) { systick(1).StoreBits(uint32(m), b) }
func (m RVR_Bits) LoadVal() int   { return systick(1).Field(uint32(m)) }
func (m RVR_Bits) StoreVal(v int) { systick(1).SetField(uint32(m), v) }

func RVR_Load() RVR_Bits   { return RVR_Bits(systick(1).Load()) }
func RVR_Store(b RVR_Bits) { systick(1).Store(uint32(b)) }

func (b RVR_Bits) Field(mask RVR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func Make_RVR(v int, mask RVR_Bits) RVR_Bits {
	return RVR_Bits(bits.Make32(v, uint32(mask)))
}


type CVR_Bits uint32

func (m CVR_Bits) Set()           { systick(2).SetBits(uint32(m)) }
func (m CVR_Bits) Clear()         { systick(2).ClearBits(uint32(m)) }
func (m CVR_Bits) Load() uint32   { return systick(2).Bits(uint32(m)) }
func (m CVR_Bits) Store(b uint32) { systick(2).StoreBits(uint32(m), b) }
func (m CVR_Bits) LoadVal() int   { return systick(2).Field(uint32(m)) }
func (m CVR_Bits) StoreVal(v int) { systick(2).SetField(uint32(m), v) }

func CVR_Load() CVR_Bits   { return CVR_Bits(systick(2).Load()) }
func CVR_Store(b CVR_Bits) { systick(2).Store(uint32(b)) }

func (b CVR_Bits) Field(mask CVR_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func Make_CVR(v int, mask CVR_Bits) CVR_Bits {
	return CVR_Bits(bits.Make32(v, uint32(mask)))
}


type CALIB_Bits uint32

func (m CALIB_Bits) Set()           { systick(3).SetBits(uint32(m)) }
func (m CALIB_Bits) Clear()         { systick(3).ClearBits(uint32(m)) }
func (m CALIB_Bits) Load() uint32   { return systick(3).Bits(uint32(m)) }
func (m CALIB_Bits) Store(b uint32) { systick(3).StoreBits(uint32(m), b) }
func (m CALIB_Bits) LoadVal() int   { return systick(3).Field(uint32(m)) }
func (m CALIB_Bits) StoreVal(v int) { systick(3).SetField(uint32(m), v) }

func CALIB_Load() CALIB_Bits   { return CALIB_Bits(systick(3).Load()) }
func CALIB_Store(b CALIB_Bits) { systick(3).Store(uint32(b)) }

func (b CALIB_Bits) Field(mask CALIB_Bits) int {
	return bits.Field32(uint32(b), uint32(mask))
}
func Make_CALIB(v int, mask CALIB_Bits) CALIB_Bits {
	return CALIB_Bits(bits.Make32(v, uint32(mask)))
}

